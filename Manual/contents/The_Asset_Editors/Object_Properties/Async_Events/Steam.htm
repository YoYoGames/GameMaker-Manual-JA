<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>スチーム</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Steam async event." />
  <meta name="rh-index-keywords" content="Objects - Async Steam Event" />
  <meta name="search-keywords" content="Steam,ev_web_steam,ugc_item_installed,ugc_item_subscribed,ugc_item_unsubscribed" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>スチーム</h1>
  <p><img>このイベントは、<a href="../../../GameMaker_Language/GML_Reference/Steam/Steam.htm">Steam 拡張</a>機能の一部からの<a class="glossterm" data-glossterm="コールバック" href="#">コールバックによってのみ</a>発生させることができ、<a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a>を変数 <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>イベントを発生させた関数からのコールバックに応じて、異なるキーと値のペアを含んでいます。マップは常にキー &quot;<span class="inline">event_type</span>&quot; を含んでおり、これを解析することでイベントをトリガーした関数の種類を見つけ、必要なコードを適切に変更することができます。</p>
  <p>このイベントをトリガーする関数を呼び出すと、一意の非同期 ID 値が生成されます。async_load マップは常に ID キーを含み、それを解析して正しいイベントに応答していることを確認できますので、変数に保存して確認する必要があります。実際、非同期応答を生成するために使用される<span class="notranslate">Steam</span> 関数に関係なく、マップは常に次のキーを保持します。</p>
  <ul class="colour">
    <li>&quot;<span class="inline">id</span>&quot; - イベントをトリガーした関数が返す非同期ID</li>
    <li>&quot;<span class="inline">result</span>&quot; - 演算結果(実数値)です。これは、<span class="notranslate">GML</span> の定数 <span class="inline">ugc_result_success</span> か、その他の実数値になります。この定数をチェックすることで、呼び出しが成功したことを確認する必要があります。また、別の値が返された場合は、何かが正しく動作していないことになります。返される可能性のある残りの値は、<span class="notranslate">Steam</span> &quot;<span class="inline">EResult</span>&quot; の結果として示されます。また、SDKヘッダーには、可能性のあるすべての値について <span class="inline">steamclientpublic.h</span> が表示されるはずです。</li>
    <li>&quot;<span class="inline">event_type</span>&quot; - イベントの種類を示す<span class="notranslate">string</span> (詳細は下記を参照)</li>
  </ul>
  <p> </p>
  <h2>データのアップロード</h2>
  <p><span class="notranslate">Steam</span> 関数を使用してリーダーボードをアップロードする場合 ( <span class="inline">steam_upload_score()</span> または <span class="inline">steam_upload_score_buffer()</span>)、返される DS マップは以下のキー/値のペアになります。</p>
  <ul class="colour">
    <li>&quot;<span class="inline">event_type</span>&quot; - このキーは値 &quot;<span class="inline">leaderboard_upload</span>&quot; を保持します。</li>
    <li>&quot;<span class="inline">post_id</span>&quot; - このキーは、アップロード呼び出し関数によって返されるID値と一致する必要があります。</li>
    <li>&quot;<span class="inline">lb_name</span>&quot; - このキーは、以下の場所に投稿されたリーダーボードの名前を保持します。</li>
    <li>&quot;<span class="inline">success</span>&quot; - 投稿が成功した場合は1、失敗した場合は0となります。</li>
    <li>&quot;<span class="inline">updated</span>&quot; - リーダーボードのスコアが実際に更新された場合 (つまり、新しいスコアが良くなった場合) は 1、そうでない場合は 0 となります。</li>
    <li>&quot;<span class="inline">score</span>&quot; - このキーには、投稿されたスコアが格納されています。</li>
  </ul>
  <p>楽譜アップロード機能のページで、その例を見ることができます。</p>
  <p> </p>
  <h2>リーダーボードのダウンロード</h2>
  <p><span class="notranslate">Steam</span> 関数を使用してリーダーボードをダウンロードする場合 (<span class="inline">steam_download_scores()</span>, <span class="inline">steam_download_scores_around_user()</span> または <span class="inline">steam_download_friends_scores()</span>) 、返される DS マップは次のキー/値のペアになります。</p>
  <ul class="colour">
    <li>&quot;<span class="inline">event_type</span>&quot; - このキーは値 &quot;<span class="inline">leaderboard_download</span>&quot; を保持します。</li>
    <li>&quot;<span class="inline">id</span>&quot; - このキーは、ダウンロード呼び出し関数が返す ID 値と一致する必要があります。</li>
    <li>&quot;<span class="inline">status</span>&quot; - コールバックのステータス。-1 は失敗、または結果が返されないことを意味し、0 は成功を意味します。</li>
    <li>&quot;<span class="inline">lb_name</span>&quot; - このキーは、以下の場所に投稿されたリーダーボードの名前を保持します。</li>
    <li>&quot;<span class="inline">numEntries</span>&quot; - 返されるリーダーボードデータの「行」の数。</li>
    <li>&quot;<span class="inline">entries</span>&quot; - 別の DS マップを含む JSON<span class="notranslate">object</span> <span class="notranslate">string</span> キー &quot;<span class="inline">default</span>&quot; (結果が含まれていないことを意味する) またはキー &quot; <span class="inline">entries</span>&quot; を含み、その値を取得することができます。<span class="inline">entries</span><span class="inline">data</span>&quot; の返り値は、リーダーボードの各ランクを含む<a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Lists/DS_Lists.htm">DS リストと</a>なり、リストの各エントリから &quot;<span class="inline">name</span>&quot;, &quot;<span class="inline">score</span>&quot;, &quot; <span class="inline">rank</span>&quot; のキーを含む別の DS マップを参照することになります。</li>
  </ul>
  <p>スコアデータのダウンロードの仕組みについて、与えられたリーダーボードのトップ10ランキングを要求し、その結果を<span class="notranslate">Steam</span> Async Event で解析する例を示します（アップロードの例については、該当する関数のページを参照してください）。まず始めに、以下のコードでスコアをリクエストする必要があります。</p>
  <p class="code">score_get = steam_download_scores(&quot;Game Scores&quot;, 1, 10);</p>
  <p>これは、<span class="notranslate">Steam</span> <span class="notranslate">Server</span> にリーダーボード「ゲームスコア」のスコアを要求し、変数 &quot;<span class="inline">score_get</span>&quot; に要求の非同期 ID を格納します。これは、<strong>Steam Async Event</strong>で次のように処理されます。</p>
  <p class="code">var async_id = ds_map_find_value(async_load, &quot;id&quot;);<br />
    <br />
    if (async_id == score_get)<br />
    {<br />
        var entries = ds_map_find_value(async_load, &quot;entries&quot;);<br />
        var map = json_decode(entries);<br />
    <br />
        if (ds_map_exists(map, &quot;default&quot;))<br />
        {<br />
            ds_map_destroy(map);<br />
            exit;<br />
        }<br />
        else<br />
        {<br />
          ds_map_destroy(map);<br />
          exit;<br />
          }<br />
       else<br />
          {<br />
          var list = ds_map_find_value(map, &quot;entries&quot;);<br />
          var len = ds_list_size(list);<br />
          var entry;<br />
          for(var i = 0; i &lt; len; i++;)<br />
             {<br />
             entry = ds_list_find_value(list, i );<br />
             steam_name[i] = ds_map_find_value(entry, &quot;name&quot;);<br />
             steam_score[i] = ds_map_find_value(entry, &quot;score&quot;);<br />
       steam_rank[i] = ds_map_find_value(entry, &quot;rank&quot;);<br />
             if (ds_map_exists(entry, &quot;data&quot;))<br />
                {<br />
                var data = ds_map_find_value(entry, &quot;data&quot;);<br />
                var buffId = buffer_base64_decode(data);<br />
              var message = buffer_read(buffId, buffer_string);<br />
                show_debug_message( &quot; -- attached message: &quot; + string(message));<br />
                buffer_delete(buffId);<br />
                }<br />
             ds_map_destroy(entry);<br />
           }<br />
          ds_list_destroy(list)<br />
          }<br />
       ds_map_destroy(map)<br />
       }</p>
  <p>ここで行うことは、まず特別な async_load マップの &quot;<span class="inline">id</span>&quot; キーをチェックすることです。この値が元のコールバック関数の値（&quot;<span class="inline">score_get</span>&quot;変数に格納されている）と同じであれば、データの処理を続行します。最初に行うことは、 <span class="inline">async_load</span> DS Map をパースして &quot;<span class="inline">entries</span>&quot; というキーを探し、リーダーボードのデータを含む JSON<span class="notranslate">object</span> を格納することです。この JSON<span class="notranslate">object</span> は次にデコードされます ( <a href="../../../GameMaker_Language/GML_Reference/File_Handling/Encoding_And_Hashing/json_decode.htm"><span class="inline">json_decode()</span></a>) を別の DS マップとし、この新しいマップ ID を変数 &quot;<span class="inline">map</span>&quot; に格納する。</p>
  <p>このマップに &quot;<span class="inline">default</span>&quot; というキーがあるかどうかがチェックされ、見つかった場合はマップが破棄され、イベントが終了します。<span class="inline">default</span>まず DS マップの &quot;<span class="inline">entries</span>&quot; キーから DS リストを抽出し、 そのリストの各エントリをループして、各エントリの <span class="inline">name</span>, <span class="inline">score</span>, <span class="inline">rank</span> を含む別の DS マップを取得します。これらの値は配列に格納され、さらに「<span class="inline">data</span> 」キーがあるかどうか調べる。もしあれば (つまり、スコアが追加のデータパッケージとともにアップロードされた場合)、それを解析して<span class="notranslate">debugging</span> のコンパイラコンソールに送り、その後<span class="notranslate">buffer</span> を破棄し、さらにマップの破棄を続けます。 <span class="inline">data</span>&quot; キーが含まれている場合、それをデコードする必要があることに注意してください。 <a href="../../../GameMaker_Language/GML_Reference/Buffers/buffer_base64_decode.htm"><span class="inline">buffer_base64_decode()</span></a>関数で読み取ることができます。</p>
  <p><span class="notranslate">loop</span> が終了すると、エントリーリストが破棄され、そこから取得されたマップも破棄されます。 <span class="inline">async_load</span> DS Mapは<span data-keyref="GameMaker Name">GameMakerで</span>処理されるので、破棄する必要はありません。</p>
  <p> </p>
  <h2>UGC（User Generated Content）のダウンロードについて</h2>
  <p>ユーザー生成コンテンツ（UGC）をダウンロードするために<span class="notranslate">Steam</span> 関数を使用すると、そのうちのいくつかがこのイベントを発生させます。しかし、各関数は異なるキー/バリューペアを持つ <span class="inline">async_load</span> DS Map を生成します（ただし、一般的な &quot;<span class="inline">id</span>&quot;, &quot;<span class="inline">result</span>&quot;, &quot;<span class="inline">event_type</span>&quot; キーは常に含まれます）。詳細と例については、使用する関数に固有のページをご覧ください。</p>
  <p> </p>
  <h2>ユニークなUGCイベント</h2>
  <p><span class="notranslate">Steam</span> Async Eventは、ユーザーがゲーム外のアイテムを購読した場合にもトリガーされます。例えば、ユーザーがブラウザにタブ移動して、新しいアイテムを購読し、ゲームにタブ移動した場合です。この場合、 <span class="inline">async_load</span> マップには、以下の詳細情報のみが含まれます（このページの一番上に記載されているデフォルト値は含まれません）。</p>
  <ul class="colour">
    <li>&quot;<span class="inline">event_type</span>&quot; - このキーは、定数 <span class="inline">ugc_item_installed</span> を保持します。</li>
    <li>&quot;<span class="inline">published_file_id</span>&quot; - 新たにインストールされたUGCアイテムのID（インストールされたアイテムへの<span class="notranslate">path</span> を取得するために、関数 <span class="inline">steam_ugc_get_item_install_info()</span> を使用することができます）。</li>
  </ul>
  <p><span class="notranslate">Steam</span> Async イベントは、ワークショップのアイテムが購読されたとき（アプリ内から、またはワークショップブラウザから外部で）にもトリガーされます。この場合、 <span class="inline">async_load</span> マップは以下のキー/バリューペアを含みます。</p>
  <ul class="colour">
    <li>&quot;<span class="inline">event_type</span>&quot; - このキーは、定数 <span class="inline">ugc_item_subscribed</span> を保持します。</li>
    <li>&quot;<span class="inline">published_file_id</span>&quot; : このキーは、新しく購読したアイテムの公開ファイルIDを持ちます。</li>
  </ul>
  <p>このイベントは、いずれかのアイテムが購読解除された場合に発生し、DSマップには以下のように保持されます。</p>
  <ul class="colour">
    <li>&quot;<span class="inline">event_type</span>&quot; - このキーは、定数 <span class="inline">ugc_item_unsubscribed</span> を保持します。</li>
    <li>&quot;<span class="inline">published_file_id</span>&quot; : このキーは、未加入アイテムの公開ファイルIDを持ちます。</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="../Async_Events.htm">非同期イベント</a></div>
        <div style="float:right">次へ<a href="System.htm">システム</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous <span class="notranslate">Steam</span> Event
async_load
ugc_result_success
ugc_item_installed
ev_web_steam
ugc_item_subscribed
ugc_item_unsubscribed
-->
  <!-- TAGS
ev_web_steam
-->
</body>
</html>