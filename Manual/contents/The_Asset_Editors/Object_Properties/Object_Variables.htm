<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>オブジェクト変数</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing object variables" />
  <meta name="rh-index-keywords" content="Objects - Variables" />
  <meta name="search-keywords" content="object variables,instance variables" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
  <script src="../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>オブジェクト変数</h1>
  <p><strong>Variables </strong>ボタンをクリックすると、<strong>Object Variables </strong>ウィンドウが表示され、Object の Create Event の<em>前に </em>任意の数の変数を生成することができます。</p>
  <p><img>このウィンドウでは、ボタン「<strong>Add </strong>」をクリックして、リストに新しい変数を追加することができます。そして、その変数に<strong>名前を </strong>付けることができます。
    を設定し、その<strong>プロパティを</strong>調整することができます。</p>
  <p><img>変数名は文字で始まり、文字、数字、アンダースコア記号'_'のみを含むことができる。
    記号の長さは最大64個までです。つまり、有効な変数とは <span class="inline">fish</span>, <span class="inline">foo_bar</span>, <span class="inline">num1</span> のようなもので、<em>無効な</em>変数とは <span class="inline">6fish</span>,
   <span class="inline">foo bar</span> または <span class="inline">*num</span> 。変数名を指定したら、そのタイプを設定する必要があります。<img>この機能は、親/子インスタンスで作業する場合に特に便利です。定義された変数のセットを持つ親<span class="notranslate">object</span> があり、子<span class="notranslate">object</span> でそれらを簡単に変更できるからです（詳細は「<strong>オブジェクト変数と子オブジェクト</strong>」のセクションを参照）。
    に配置されたもので、<span class="notranslate">room</span> 。</p>
  <p>作成可能な変数の種類は以下の通りです。</p>
  <ul class="colour">
    <li><strong>実数</strong>：実数とは、整数以外の数で、正でも負でもよい。つまり、 <span class="inline">124.5</span>, <span class="inline">45639.566546456</span>, <span class="inline">0.9</span>, <span class="inline">-45.5</span> などはすべて実数の例です。すべての実数は64bit<a class="glossterm" data-glossterm="浮動小数点" href="#">浮動小数点</a>値（double）として格納されます。<strong>実数 </strong>（および<strong>整数</strong>）<strong> </strong>のデータです。
      <img><img> これをチェックすると、開始値と終了値を入力することができ、<span class="notranslate">Object</span> 変数ウィンドウに固定値が表示される代わりに、その変数が表示されるようになります。
      スライダーがこれらの値で固定されます。<br>
      <img></li>
    <li><strong>整数</strong>。整数は整数であり、正または負の値をとることができます。例えば、 <span class="inline">30004</span>, <span class="inline">19</span>, <span class="inline">0</span>, <span class="inline">-300</span> のようになります。なお
      実数で説明したように，出力する整数の値の範囲を設定する。</li>
    <li><strong>文字列</strong>です。<span class="notranslate">string</span> は、&quot;fish&quot;、&quot;Hello World&quot;、&quot;12345 &quot;などのように、二重引用符で囲まれたものである。</li>
    <li><strong>ブーリアン</strong>。ブール値とは、真か偽のどちらかの値である。<span class="notranslate">Object</span> Editor Variablesウィンドウでは、trueの場合はチェックを、falseの場合はチェックを外すというように表示されます。</li>
    <li><strong>式</strong>。式とは、通常の数値、変数、<span class="notranslate">strings</span> 、または<span class="notranslate">GML</span> 関数と、1つまたは複数の演算子を含むことができる数学的なフレーズです。例えば、 <span class="inline">sqrt(85 * 6) + 5.5</span> は式である。</li>
    <li><strong>リソースの</strong>こと。リソースとは、<span class="notranslate">Asset</span> ブラウザで定義したリソースのうちのいずれか 1 つを指します。このリソースタイプを選択すると、<strong>Open<span class="notranslate">Asset</span> Explorer </strong><img> ボタンをクリックして、<span class="notranslate">Asset</span> Explorer を開き、必要なリソースを選択することができます。</li>
    <li><strong>リスト</strong>。リスト：リスト型の入力を選択すると、値の選択（<span class="notranslate">strings</span> 、実数、式など）を作成することができ、その中から1つまたは複数を選択して、変数が返すようにすることができます。このような項目を定義するために
      リストに入れるには、まず<strong>オプションに</strong>追加する必要があります（<img> ボタンをクリックします）。<br>
      <img>ドロップダウンメニューから、メインウィンドウの変数のデフォルト値として項目を選択することができるようになります。<br>
      <img>リストオプションで<strong>マルチセレクトが</strong>チェックされている場合、変数は、すべての
      を選択します。<br>
      <img></li>
    <li><strong>カラー</strong>：カラータイプは、変数に格納されるカラー値を定義するためのものである。実数（0から16777216まで、アルファ値255）、16進数（$RRGGBBAA）、または、以下の形式で入力できます。
      色見本上で<img> をダブルクリックして<strong>カラーピッカーを</strong>開き、そこで色を定義することができます。</li>
  </ul>
  <p> </p>
  <p> </p>
  <h1>オブジェクト変数と子オブジェクト</h1>
  <p><span class="notranslate">Object</span> 変数の重要な特徴は、<span class="notranslate">objects</span> Browser にある子オブジェクト<span class="notranslate">Asset</span> に<em>継承 </em>されることです（詳しくは、<a href="Parent_Objects.htm">親オブジェクトの</a>項を参照してください）。
    は、その一部または全部を上書きしたり、変更したりすることができます。</p>
  <p>変数が定義されている他の<span class="notranslate">object</span> リソースの子<span class="notranslate">object</span> を作成すると、これらは<span class="notranslate">Object</span> Variables ウィンドウにこのように表示されます。</p>
  <p><img>上の画像では、親<span class="notranslate">object</span> が4つの<span class="notranslate">Object</span> 変数を持ち、下の画像では、これら
    も表示されていますが、「グレーアウト」しているだけで、「<strong> Inherited From Parent</strong>」<img> のアイコンが表示されており、継承されていることがわかります。
    これらの継承された変数は、<strong>Override Variable</strong> <img> ボタンをクリックすると編集できますので、レンジスライダー
    や値を変更したり、リストから別の項目を選択したりすることができます。親変数を編集する場合、<em>定義された値のみを変更でき</em>、名前と変数オプションは変更できないことに注意してください。また、新しい<span class="notranslate">Object</span> 変数を追加することができます。
    を子<span class="notranslate">objects</span> にも追加します（上の画像では、子<span class="notranslate">Object</span> に対してのみ、「Character Type」が新しい<span class="notranslate">object</span> Variable として追加されていることがわかります）。</p>
  <p>継承された<span class="notranslate">Object</span> 変数を編集した場合、Delete<img> ボタンをクリックすると、編集は削除されますが、変数は削除されません。この変数は
    はまだ親から継承されていますが、再び親のデフォルト値が使用されます。変数を完全に削除する必要がある場合は、親から行う必要があります。<span class="notranslate">object</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="../Objects.htm"> <span class="notranslate">Object</span> 編集部</a></div>
        <div style="float:right">次へ<a href="Object_Events.htm">オブジェクトイベント</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Object Variables
-->
  <!-- TAGS
object_variables
-->
</body>
</html>