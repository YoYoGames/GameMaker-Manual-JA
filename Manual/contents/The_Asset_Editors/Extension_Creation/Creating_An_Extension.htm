<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>エクステンションの作成</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how to create a generic extension" />
  <meta name="rh-index-keywords" content="Extensions - Creating An Extension" />
  <meta name="search-keywords" content="creating extensions" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>エクステンションの作成</h1>
  <p><span class="notranslate">extension</span> を作成するには、まず<a href="../../Introduction/The_Asset_Browser.htm">Asset Browser</a>内の任意の場所で<img> を右クリックし、<strong>Create -&gt; Extension</strong> を選択する必要があります。これにより、ワークスペースに新しく作成した<span class="notranslate">Extension</span> の<span class="notranslate">asset</span> プロパティが表示されます。</p>
  <p><img>これが表示されない場合は、<span class="notranslate">Extension</span> ブラウザで<span class="notranslate">asset</span> <span class="notranslate">Asset</span> をダブルクリックしてプロパティウィンドウを開くか、すでに開いている場合はそれにフォーカスを当てることができます。</p>
  <p>これで、必要なファイルや関数を追加する準備ができました。また、ここで<span class="notranslate">extension</span> に名前を付けることができます（通常の規則に従い、文字と数字のみで、アンダースコア &quot;_&quot; 以外の特殊記号は使用しないでください）。また、<span class="notranslate">extension</span> のバージョン番号を設定することもできます。</p>
  <p>Copies To」では、この<span class="notranslate">extension</span> がエクスポートされるプラットフォームを選択することができます。単純な<span class="notranslate">GML</span> <span class="notranslate">extension</span> の場合は、すべてのプラットフォームで動作するため、これを気にする必要はありません。しかし、プラットフォーム固有の<span class="notranslate">extension</span> （<span class="notranslate">Android</span> など）を作成する場合は、互換性のないプラットフォーム（<span class="notranslate">iOS</span> 、コンソールなど）にエクスポートさ<em>れない</em>ことを確認する必要があり ます。</p>
  <h2>プレースホルダーファイル</h2>
  <p>新しい<span class="notranslate">extension</span> にファイルを追加するには、メニューアイコン<img> をクリックし、プレースホルダーファイル（「Add Placeholder」）またはターゲットプラットフォームで必要な実際のファイル（「Add File」）を選択する必要があります。</p>
  <p class="dropspot"><img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" /></p>
  <p>汎用」プレースホルダーは、特定のプラットフォームで必要とされるものを除き、どのようなタイプのファイルでも構いません（したがって、たとえば、 <span class="inline">DLL</span> や <span class="inline">SO </span>のファイルはありません）。また、関数や定数のセットを与えられた<span class="notranslate">extension</span> と結びつけるための「リンカー」ファイルとして以外は使用しません（一般に、これは<span class="notranslate">iOS</span> と<span class="notranslate">Android</span> <span class="notranslate">extensions</span> でしか使用できませんが、これらのターゲットについては以下のセクションで説明します）。また、より具体的な用途のために、「GML」や「JS」プレースホルダーファイルを追加することもできます。</p>
  <h2>ファイルの追加</h2>
  <p>通常、<span class="notranslate">iOS</span> や<span class="notranslate">Android</span> 向けにビルドするのでなければ、プレースホルダーを使う必要はありません。そこで、「ファイルを追加」オプションを選択して、ターゲットプラットフォームに応じて、以下のファイルのいずれかを追加します。</p>
  <ul class="colour">
    <li class="dropspot"><span class="inline">.gml</span>:<span class="notranslate">GameMaker Language</span> 、全プラットフォームに対応したファイルのみ作成されています。</li>
    <li class="dropspot"><span class="inline">.js</span>:JavaScriptの<span class="notranslate">extension</span> 形式で、HTML5ターゲットにのみ対応しています。</li>
    <li class="dropspot"><span class="inline">.dll</span>:ダイナミックリンクライブラリ<span class="notranslate">extension</span> 形式で、<span class="notranslate">Windows</span> 、UWP、Xbox の各ターゲットにのみ対応しています（各ターゲットには、その仕様に対応した異なる <span class="inline">*.dll</span> ファイルが必要です）。</li>
    <li class="dropspot"><span class="inline">.dylib</span>:これはMacのDLLに相当するもので、Macターゲットにのみ対応しています（<span class="notranslate">iOS</span> は不可）。</li>
    <li class="dropspot"><span class="inline">.so</span>:これは<span class="notranslate">Linux</span> 相当の DLL で、<span class="notranslate">Ubuntu</span> (<span class="notranslate">Linux</span>) ターゲットにのみ対応しています。</li>
    <li class="dropspot"><span class="inline">.prx</span>:PlayStationターゲットに機能を追加するためのファイル形式です（ターゲットごとに仕様に対応した異なる <span class="inline">*.prx</span> ファイルが必要です）。</li>
  </ul>
  <p><strong>Android </strong>と<strong>iOS</strong> 用のファイルタイプがないことに気がつくと思いますが、これはセットアップが若干異なるためです。さらに下に、これらの設定方法についての説明がありますが、まず、どのターゲット・プラットフォームに対しても同じ手順で、一般的な<span class="notranslate">GML</span> <span class="notranslate">extension</span> を作成する方法を説明します。</p>
  <h2><span class="notranslate">GML</span> エクステンションの作成</h2>
  <p>まず最初に、使用するファイルを作成する必要があります。<span class="notranslate">GML</span> <span class="notranslate">extension</span> の場合、これはテキストファイル（ <span class="inline">.gml</span> <span class="notranslate">extension</span> で保存）で、次のような書式になります。</p>
  <p class="code">#define c_alice_blue<br />
    return make_color_rgb(240,248,255);<br />
    <br />
    <br />
    #define instance_create_colour<br />
    var i = instance_create_layer(argument0, argument1, argument2, argument3);<br />
    with (i)<br />
    {<br />
        image_blend = argument3;<br />
    }<br />
    return i;
  </p>
  <p>ご覧の通り、各セクションは <span class="inline">#define</span> の呼び出しから始まります。上の例では、2つの関数を定義するためにこの関数が使用されています。定義された関数の各パーツを見てみましょう。</p>
  <ul class="colour">
    <li> <span class="inline">#define</span> 文は、指定された名前の新しい関数を定義するために使用されます。</li>
    <li>この文の後に、関数コードが続きます。関数コードは、関数が呼び出されたときに、 <span class="inline">argument0</span>, <span class="inline">argument1</span>, などの変数を使用して、関数に渡された引数にアクセスします。</li>
    <li>最後に <a href="../../GameMaker_Language/GML_Overview/Language_Features/return.htm"><span class="notranslate">return</span></a>これは、<span class="notranslate">extension</span> から、関数が呼び出された<span class="notranslate">GML</span> のコードにデータを戻すために使用される文です。</li>
  </ul>
  <p>もし、 <span class="inline">DLL</span> や JavaScript<span class="notranslate">extension</span> を書くのであれば、手順は似ていますが、その拡張子のファイル形式に適した言語で書くことになります。</p>
  <p>これができたら、ファイルを<span class="notranslate">extension</span> に追加する必要があります（「ファイルを追加」オプションを使用）。このとき、<span class="notranslate">Extensions</span> のプロパティに、ファイルのプロパティ用の新しいウィンドウが連鎖します。</p>
  <p class="dropspot"><img alt="Extension Properties" class="center" height="519" src="../../assets/Images/Asset_Editors/Editor_Extensions.png" width="486" /></p>
  <p>ここでは、<span class="notranslate">extension</span> のターゲットプラットフォームを選択し（GML の場合はすべて選択します）、また、<span class="notranslate">extension</span> ファイルの名前を変更し、その他いくつかの詳細を設定しますが、これについては後ほど説明します。</p>
  <p class="note"><strong>注意</strong>：<span class="notranslate">extension</span> にファイルを追加すると、プロジェクトディレクトリにコピーされます。つまり、ゲーム内で表示されるようにするには、そのコピーにさらに変更を加える必要があります。<span class="notranslate">extension</span> ブラウザで<span class="notranslate">Asset</span> を右クリックし、「エクスプローラで開く」を選択すると、そのコピーを見つけることができます。</p>
  <h2>機能の追加</h2>
  <p>エディターには<span class="notranslate">GML</span> ファイルに含まれる関数が自動的に入力されているはずですが、もしそうでなければ、関数メニューボタン<img> をクリックして、必要なものを選択して手動で追加することができます。</p>
  <p class="dropspot"><img alt="Estension Options Icon" class="icon" src="../../assets/Images/Icons/Icon_ExtensionMenu.png" /></p>
  <p>Add Function」を選択すると、<span class="notranslate">extension</span> に関数が追加され、<span data-keyref="GameMaker Name">GameMaker の</span>ビルトイン関数と同じように呼び出すことができます。<span>関数を追加すると、以下のウィンドウが表示され、関数のプロパティを定義することができます（関数をダブルクリックしても開くことができます）。</span></p>
  <p class="dropspot"><img alt="Add Files To An Extension" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_Files.png" /></p>
  <p>上の画像では、<span class="notranslate">GML</span> <span class="notranslate">extension</span> ファイルで定義した関数 <span class="inline">instance_create_colour()</span> の詳細を関数エディタに入力しています（この関数エディタウィンドウは<span class="notranslate">GML</span> 関数を定義するためだけではないことに注意してください -- これはすべての<span class="notranslate">extension</span> タイプで同じです）。ここでは、関数に定義できる各オプションについて説明します。</p>
  <ul class="colour">
    <li>この<em>名前は</em>、プロジェクトで関数を呼び出すときに使用します。 この名前は、<span class="notranslate">extension</span> で使用する名前と一致する必要はないことに注意しましょう。 好きな名前をつけて、<em>External Name</em>フィールドで拡張モジュールで定義した実際の名前にリンクします。<img></li>
    <li>その下には、<em>ヘルプ </em>テキストを定義するセクションがあります。<em>ヘルプ </em>テキストは、コード補完ポップアップとコードエディタの下部に表示されるヘルプテキストです。</li>
    <li>次に<em>Return Typeを</em>定義します。これは<strong>double </strong>（実数の<a class="glossterm" data-glossterm="浮動小数点" href="#">浮動小数点</a>値）または<strong>文字列</strong>で、もし外部関数から何も返されなければ、これは問題ではありません。</li>
    <li>その下で、関数が受け取る引数を定義します。これらの引数は、<strong>倍数か </strong> <strong>文字列</strong>で、追加ボタン<img> をクリックすれば追加でき、削除ボタン<img> をクリックすれば削除できます。<br>
      <br>
      もし、関数が可変長の引数を取る場合（つまり、いくつかのオプションの引数を持つ場合）、一番下にある「可変長引数」チェックボックスを必ずチェックしなければなりません。
    </li>
  </ul>
  <p class="note"><strong>注</strong>：関数が<span class="notranslate">extension</span>, Mac ,<span class="notranslate">Windows</span> ( それぞれ<span class="inline">dll</span>, <span class="inline">dylib</span>,<span class="inline">so</span> ) のネイティブ<span class="notranslate">Ubuntu</span> の一部で、4つ以上の引数を持つ場合、<strong>すべての引数は同じ型でなければ</strong>なりません。</p>
  <p>オートコンプリートで表示され、色分けもされるようになりました。</p>
  <p><img>定義された関数は、<strong>Init Functions</strong>または<strong>Final Functionsとして</strong>設定することもでき、ゲームの開始時（Init）と終了時（Final）に自動的に呼び出されることを意味します。</p>
  <p class="note"><strong>重要!す</strong>べてのプラットフォームがInit関数コールをサポートして<strong>いますが、すべてのプラットフォームがFinal関数コールを実行</strong>するわけではありません。これは、特定のプラットフォームでは、この関数が呼び出されるための通知や時間を与えることなく、単にアプリを終了してしまうためです。この影響を受ける主なプラットフォームは、<strong>iOS</strong>、<strong>Android</strong>、<strong>HTML5</strong>、<strong>PlayStation </strong>、<strong>Xbox</strong>です。</p>
  <h2>マクロ</h2>
  <p>もう一つの選択肢は、<strong>マクロを</strong>作成することです。マクロは、<a class="glossterm" data-glossterm="常数" href="#">定数</a>値かコードの短いスニペットのどちらかになります (マクロの詳細については、<a href="../../GameMaker_Language/GML_Overview/Variables/Constants.htm">こちらを</a>参照してください)。例えば、以前定義した<span class="notranslate">GML</span> 拡張機能から<span class="inline">c_alice_blue</span> 関数を削除して、代わりにマクロにすることができます。マクロを作成するには、<span class="notranslate">Extension</span> プロパティにある「マクロ」ボタンをクリックするだけで、以下のウィンドウが表示されます。</p>
  <p class="dropspot"><img alt="File Property Window" class="center" height="553" src="../../assets/Images/Asset_Editors/Editor_Extensions_FileProperties.png" width="1050" /></p>
  <p>マクロの名前とその定数値、または短いコード行を指定します。マクロがコードの行である場合、<strong>マクロが呼び出されるたびに評価</strong>されることに注意してください。</p>
  <h2 id="h1"><span class="notranslate">Extension</span> オプションの作成</h2>
  <p>拡張機能<strong>オプション</strong>&quot;の隣にある歯車のアイコンをクリックすると、拡張機能のオプションを作成または変更することができます。</p>
  <p><img>確認画面で「<strong>はい</strong>」をクリックすると、新しいウィンドウが表示され、新しい<span class="notranslate">extension</span> オプションを追加することができます。</p>
  <p><img> <span class="notranslate">extension</span> の各オプションには、名前、デフォルト値、データ型を与えることができます。名前は、 のコードで、オプションの値を取得するために内部的に使用するものです。<span class="notranslate">extension</span> </p>
  <p>Add Option &quot;を使ってオプションを追加する以外に、&quot;Add Section &quot;を使ってセクションを追加することができます。セクションは<strong>オプションではなく</strong>、メインウィンドウ（<span class="notranslate">Extension</span> Editor）に表示される見出しに過ぎません。たくさんのオプションがあり、エンドユーザーが見るオプションリストをすっきりさせたい場合に、この機能を使用します。</p>
  <p>以下の種類のオプションを作成することができます。</p>
  <ul class="colour">
    <li><strong>ブール値</strong>です。true/falseのチェックボックスを作成します。</li>
    <li><strong>数字</strong>です。これは実数です。</li>
    <li><strong>文字列</strong>です。これはテキストです<span class="notranslate">string</span>.</li>
    <li><strong>FilePath</strong>です。これは、ファイルへの<span class="notranslate">path</span> 。OSのエクスプローラーでファイルを参照することができるようになります。</li>
    <li><strong>FolderPath</strong>。これは、フォルダ/ディレクトリへの<span class="notranslate">path</span> 。OSのエクスプローラーを使って、フォルダを参照することができるようになります。</li>
    <li><strong>リスト</strong>です。これは、あらかじめ定義された項目のリストから1つの項目を選択することができるドロップダウンです。</li>
  </ul>
  <p>また、オプションの横にある<img> の歯車のアイコンをクリックすると、オプションの<strong>表示名と</strong> <strong>説明</strong>（表示名の上にカーソルを置くとツールチップとして表示されます）が表示されます。</p>
  <p>extrasウィンドウでは、このオプションをゲームにバンドルされている<strong>options.ini</strong>ファイルにエクスポートすることもできます。</p>
  <p>最後に、エディターからオプションを非表示にして、<span class="notranslate">extension</span> を使用するエンドユーザーには見えないようにすることができます。</p>
  <h3><span class="notranslate">Extension</span> オプションの使用</h3>
  <p>拡張機能のオプションの値は、<a href="../../GameMaker_Language/GML_Reference/Asset_Management/Extensions/Extensions.htm">Extension Functions</a> を使って<span class="notranslate">runtime</span> で取得することができます。</p>
  <p>また、<span class="inline2">YYEXTOPT_&lt;拡張名&gt;_&lt;オプション名&gt;という</span>名前で、<a data-xref="{title}" href="../../Settings/Runner_Details/Compiler_Batch_Files.htm">コンパイラーバッチファイル/スクリプトで</a> <span class="notranslate">extension</span> オプションを取得することができます。</p>
  <p>拡張機能オプションは、<span class="notranslate">runtime</span> が<span class="notranslate">extension</span> で使用される関数を持つ場合にのみ<span class="notranslate">runtime</span> で使用できます。ただし、オプションは拡張機能の使用にかかわらず、常に INI ファイル（オプションが有効な場合）およびバッチ<span class="notranslate">scripts</span> にエクスポートされ ます。</p>
  <h2>プロキシファイル</h2>
  <p>複数のターゲットプラットフォームで作業する場合、1つの関数/マクロセットを持つ1つの<span class="notranslate">extension</span> を作成することで、<em>すべての </em>プラットフォームで動作させることができることに注目すべきです。これは、リンクライブラリの1つだけを<span class="notranslate">extension</span> としてゲームに追加し、もう1つを<strong>Extension Properties</strong>ウィンドウの<strong>Proxy Files</strong>リストに配置することで実現できます。</p>
  <p><img>例えば、 <span class="inline"> <strong>dll </strong></span>&quot;<span class="inline">Haggis.dll</span>&quot; を持つ<span class="notranslate">Windows</span> <span class="notranslate">extension</span> があったとします。この <span class="inline"> <strong>dll</strong></span> を Mac の <span class="inline"> <strong>DyLib</strong></span> として複製し、名前を &quot;<span class="inline"><strong>libHaggis.dylib</strong></span>&quot; とし、内部関数名が元の<span class="notranslate">Windows</span> <span class="inline"> <strong>dll</strong></span> のものと一致するようにするだけでいいのです。この <strong> <span class="inline">DyLib</span> </strong>これを Proxy Files に追加し、Mac ターゲットでゲームを実行するときにエクスポートするように設定すれば、<span data-keyref="GameMaker Name">GameMaker</span>は<span class="notranslate">extension</span> の関数が呼ばれたときに自動的にこの関数を使用するようになります。</p>
  <p>プロキシファイルを追加するには、選択したリソースファイルのプロパティウィンドウで<img> ボタンをクリックし、ファイルの場所をブラウズするだけです。追加されたら、拡張機能のターゲットを更新して、適切なモジュールを追加する必要があるかもしれませんが、次にゲームを実行すると、そのプラットフォーム用のプロキシとして含まれます。プロキシファイルを削除することもできます。<img> ボタンをクリックすると、選択したプロキシファイルが削除されます。</p>
  <p><img> プロキシファイルを追加すると、それらはプロジェクトの<span class="notranslate">Extensions</span> フォルダにコピーされます（<span class="notranslate">extension</span> で右クリックし、<em>エクスプローラで開くを</em>選択すると見つかります）。編集する必要がある場合は、<span data-keyref="GameMaker Name">GameMaker</span>はプロジェクト内のものをコンパイルに使用するので、インポートしたソースファイルではなくゲームに同梱されているコピーしたファイルを編集する必要があります。</p>
  <h2 id="h">命名規則</h2>
  <p><span data-keyref="GameMaker Name">GameMaker</span>はこれらの名前を解析し、<span class="notranslate">extension</span> とファイル名に応じてターゲットモジュールを指定し、自動的にファイルをリンクします。これらの規則に従わない場合、ゲームは<span class="notranslate">runtime</span> で動作しないかもしれません。<span data-keyref="GameMaker Name">GameMaker は</span>どのファイルを使用すべきか判断できず、ファイルを正しく読み込むことができません。</p>
  <p>各ターゲットプラットフォームでの命名規則を以下に示す。</p>
  <table>
    <colgroup>
      <col style="width: 173px;" />
      <col style="width: 715px;" />
    </colgroup>
    <tbody>
      <tr>
        <th>プラットフォーム</th>
        <th>名称</th>
      </tr>
      <tr>
        <td>Windows 32bit版ランタイム</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.dll, lib&lt;<em>Name</em>&gt;.dll</span></td>
      </tr>
      <tr>
        <td>Windows 64ビット版ランタイム</td>
        <td><span class="inline">&lt;<em>N</em><em>ame</em>&gt;_x64.dll, lib&lt;<em>Name</em>&gt;_x64.dll</span></td>
      </tr>
      <tr>
        <td>ユーダブリューピー</td>
        <td><span class="inline"><span class="inline">&lt;<em>Name</em>&gt;.dll, &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_x86.dll, &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_arm.dll, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_x86.dll, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_arm.dll</td>
      </tr>
      <tr>
        <td>Ubuntu (<span class="notranslate">Linux</span>)</td>
        <td><span class="inline">&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;.so,<br>
            &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux.so,<br>
            <br>
            &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_arm.so、lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_arm.so。<br>
            <span class="inline">lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux_arm.so,<br>
            <br>
           <em>&lt;名前&gt;_arm64</em>.so、lib<em>&lt;名前&gt;_arm64</em>.so、lib<em>&lt;名前&gt;_linux_arm64</em>.so。<br>
            <br>
            &lt;名前<em>&gt;_arm64-v8</em>.so。<br>
            lib&lt; 名前&gt;<em>_arm64-v8</em>.so, lib&lt; 名前&gt;_linux_arm64-v8.so.です。<br>
            <br>
            &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_armeabi-v7a.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_armeabi-v7a.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux_armeabi-v7a.so</td>
      </tr>
      <tr>
        <td>マクロス</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.dylib, lib&lt;Name&gt;.dylib</span></td>
      </tr>
      <tr>
        <td>HTML5</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.js</span></td>
      </tr>
      <tr>
        <td>PS4</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.prx, lib&lt;<em>Name</em>&gt;.prx, &lt;<em>Name</em>&gt;_ps4.prx, lib&lt;<em>Name</em>&gt;_ps4.prx</span></td>
      </tr>
      <tr>
        <td>PS5</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.prx, lib&lt;<em>Name</em>&gt;.prx, &lt;<em>Name</em>&gt;_ps5.prx, lib&lt;<em>Name</em>&gt;_ps5.prx</span></td>
      </tr>
      <tr>
        <td>Xbox One</td>
        <td><span class="inline"><span class="inline">&lt;<em>Name</em>&gt;.dll, </span><em>&lt;名前&gt;_xboxone</em>.dll</td>
      </tr>
      <tr>
        <td>XboxシリーズX|S</td>
        <td><span class="inline"><span class="inline">&lt;<em>Name</em>&gt;.dll, </span><em>&lt;名前&gt;_xboxseriesxs</em>.dll</td>
      </tr>
    </tbody>
  </table>
  <p>上記の規則に従って、 <span class="inline">&lt;<em>Name</em>&gt;</span> の部分を、プロキシファイルを追加するベースファイルの名前に置き換えます。</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="../Extensions.htm"> <span class="notranslate">Extension</span> 編集部</a></div>
        <div style="float:right">次へ<a href="Android_Extensions.htm">Androidの拡張機能</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Creating Extensions
-->
  <!-- TAGS
extensions_create
-->
</body>
</html>