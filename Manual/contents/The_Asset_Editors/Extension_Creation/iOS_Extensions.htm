<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>iOS / tvOS 拡張機能</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how iOS extensions work" />
  <meta name="rh-index-keywords" content="Extensions - Creating iOS / tvOS Extensions" />
  <meta name="search-keywords" content="iOS Extensions,iOS, tvOS Extensions, tvOS" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>iOS /<span class="notranslate">tvOS</span> エクステンション</h1>
  <p><span class="notranslate">extension</span> または tvOS 用の<span class="notranslate">iOS</span> を作成するには、2つの部分に分けて行う必要があります。最初の部分は<span class="notranslate">extension</span> 自体と必要なファイルを追加することで、2 番目の部分は<span class="notranslate">extension</span> が必要とする関数とマクロ/定数を作成することです。</p>
  <p>関数や定数は<strong>プレースホルダーファイルを使って </strong>追加されるので、プレースホルダーを追加してから、<a href="Creating_An_Extension.htm">この</a>セクションで説明したように関数やマクロを定義します。残りのファイルを追加するには、まずエディタの<strong>Additional Features</strong>セクションで<em>iOS </em>および/または<em>tvOS </em>チェックボックスにチェックを入れ、関連する<strong>Extension Properties</strong>ウィンドウを開く必要があります（下の画像は<span class="notranslate">iOS</span> のプロパティウィンドウですが、<span class="notranslate">tvOS</span> ウィンドウもまったく同じものです）。</p>
  <p class="dropspot"><img alt="iOS Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS.png" /></p>
  <p>ここでは、以下の内容をお伝えします。</p>
  <ul class="colour">
    <li class="dropspot"><strong>コンパイラ<span class="notranslate">Flags</span> / リンカフラグ</strong>。フレームワークやサードパーティのSDKの中には、動作させるためにリンカ<span class="notranslate">flags</span> とコンパイラ<span class="notranslate">flags</span> を追加する必要があるものがあり、ここで指定できます（詳細は、該当するSDKやフレームワークに付属するドキュメントを参照してください）。</li>
    <li class="dropspot"><strong>クラス名</strong>。<span class="notranslate">extension</span> は複数のクラスを持つことができ、各クラスは独自の関数や定数を持ちます。そのため、その目的を反映した名前を付ける必要があります。</li>
    <li class="dropspot"><strong>App Delegate クラス名</strong>。カスタムアプリデリゲートクラスの名前です。これを設定することで、<span class="notranslate">extension</span> 、コアアプリの機能をオーバーライド／拡張することができます。この機能を使用するには、次のようにする必要があります。
      <ol>
        <li>デリゲートソースファイルがデリゲートクラスと同じ名前であることを確認します (例: <span class="inline">@interface MyCustomAppDelegate</span> は &quot; <span class="inline">MyCustomAppDelegate.h</span>&quot; で定義する必要があります)</li>
        <li>アプリのデリゲートヘッダファイルの先頭に、環境変数 <span class="inline">${YYExtAppDelegateIncludes}</span> を追加してください。これは、コンパイル時に、親デリゲートクラスの関連インクルードファイルで置き換えられます。</li>
        <li>カスタム App デリゲートのベースクラスとして、 <span class="inline">${YYExtAppDelegateBaseClass}</span> 環境変数を使用します。これは、コンパイル時に正しい基本デリゲートクラスに置き換わります。<br>
          <br>
          カスタム App デリゲートを使用する他の<span class="notranslate">extension</span> と共に<span class="notranslate">extensions</span> が動作するようにするには、子クラスでオーバーライドされたメソッドからベースクラスのメソッドを呼び出す必要があります。スーパークラスのメソッドを呼び出す前に、そのメソッドがクラス階層に実装されていることを確認し、エラーを回避する必要があります。
        </li>
      </ol>
     <p class="code">- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br />
        {<br />
            // Check if any superclasses implement this method and call it<br />
            if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br />
              return [super application:application willFinishLaunchingWithOptions:launchOptions];<br />
            else<br />
                return TRUE;<br />
        }</p>
    </li>
    <li class="dropspot"><strong>システムフレームワーク</strong>。ここでは、<span class="notranslate">iOS</span> <a class="glossterm" data-glossterm="フレームワーク" href="#">システムフレームワークを</a> <span class="notranslate">extension</span> に追加することができます。<img> ボタンをクリックすると、プレースホルダフレームワークが追加されます。その後、<img> をダブルクリックすると、編集できます。利用可能なシステムフレームワークの詳細については、<a href="https://developer.apple.com/documentation/">こちらを</a>参照してください。システムフレームワークを削除するには、それを選択し、<img> ボタンをクリックします。<br>
      <br>
      <img>フレームワークのチェックボックスを有効にすると、それを「<strong>弱い参照</strong>」としてマークできます。これは、<span class="notranslate">Xcode</span> の「<strong>Build Phases -&gt; Link Binary with Libraries</strong>」セクションに、「<strong>Required</strong>」フレームワーク（デフォルトの動作）とは対照的に、「<strong>Optional</strong>」フレームワークとして追加されます。
    </li>
    <li class="dropspot"><strong>サードパーティフレームワーク＋バンドル</strong>。このセクションは、サードパーティとSDKバンドルを追加するためのものです。システムフレームワークと同様に、<img> ボタンをクリックして追加し、<img> をダブルクリックして編集します。また、それらを選択してから<img> をクリックすると、それらを削除できます（フレームワーク名に関する情報は、選択した SDK に付属するドキュメントを参照してください）。<br>
      <br>
      ここでは、フレームワークを<strong>埋め込まない</strong>、<strong>埋め込んで署名</strong>する、または<strong>署名せずに埋め込むを</strong>選択できます。<br>
      <img>これは、<span class="notranslate">Xcode</span> の「<strong>Frameworks, Libraries and Embedded Content</strong>」で追加されたフレームワークのオプションと同じものです。
    </li>
    <li class="dropspot"><strong>Mac上のフレームワーク<span class="notranslate">path</span> </strong> を入力します。プロジェクトのビルドに使用するMac上にファイルが存在する<span class="notranslate">extension</span> 、そのフレームワークを追加したい場合は、このフィールドにそのフレームワークへの<span class="notranslate">path</span> （ビルドマシン上）を入力し、<img> ボタンをクリックして追加することができます。<br>
      <br>
      <span class="notranslate">path</span> は <span class="inline">.framework</span> ファイルを指す必要があります。このファイルは <span class="inline">.zip</span> として圧縮され、<span class="notranslate">extension</span> ディレクトリの下の <span class="inline">iOSSourceFromMac</span> フォルダに置かれます。<span class="notranslate">extension</span> で<img> を右クリックし、<em>エクスプローラで開くを</em>選択すれば、いつでも簡単に開くことができます。
    </li>
    <li class="dropspot"><strong>ソースを追加</strong>します。これを使用して、<span class="notranslate">extension</span> の動作に必要なソースファイルを追加することができます。追加されたファイルは、拡張機能ディレクトリ内の <span class="inline">iOSSource</span> フォルダに格納されます。</li>
    <li class="dropspot"><b>コードインジェクション</b>。ここでは、テスト用または最終リリース用にゲームがビルドされたときに、<span class="notranslate">iOS</span> アプリケーションに注入 (追加) する任意のコードを追加することができます。間違った設定をすると、ゲームが投稿できないので、ストアにゲームを投稿する前に、この設定（とパーミッション）を慎重に修正するようにしてください。</li>
  </ul>
  <h2>コードインジェクション</h2>
  <p>Code Injection は iOS/tvOS<span class="notranslate">extensions</span> でも<span class="notranslate">Android</span> <span class="notranslate">Extensions</span> のページで説明したのと同じ方法で使用することができます。</p>
  <p><span class="notranslate">iOS</span> および<span class="notranslate">tvOS</span> プラットフォームでは、以下のタグが利用可能です。</p>
  <p class="code">YYIosPlist<br />
    YYIosEntitlements<br />
    YYIosCocoaPods<br />
    YYIosCocoaPodsDependencies<br />
    YYIosBuildRules<br />
    YYIosBuildSettingsInjection<br />
    YYIosScriptPhase<br />
    YYIosCFBundleURLSchemesArray<br />
    YYIosLSApplicationQueriesSchemesArray<br />
    YYIosPrivacyManifest<br />
    YYIosLaunchActionCommandLineArguments<br />
    YYIosBridgeHeader<br />
    <br />
    YYTvosPlist<br />
    YYTvosEntitlements<br />
    YYTvosCocoaPods<br />
    YYTvosCocoaPodsDependencies<br />
    YYTvosBuildRules<br />
    YYTvosBuildSettingsInjection<br />
    YYTvosScriptPhase<br />
    YYTvosCFBundleURLSchemesArray<br />
    YYTvosLSApplicationQueriesSchemesArray<br />
    YYTvosPrivacyManifest
  </p>
  <p>コードが注入される<span class="notranslate">runtime</span> の位置は、タグの種類によって異なります。</p>
  <table>
    <colgroup>
      <col style="width: 174px;" />
      <col style="width: 760px;" />
    </colgroup>
    <tbody>
      <tr>
        <th style="">タグタイプ</th>
        <th style="">インジェクションパス</th>
      </tr>
      <tr>
        <td style=""><b>エンタイトルメント</b></td>
        <td style="">{RUNTIME}TemplateProject${YXCodeProjName}<br>
         <span>${YYXCodeProjName}.entitlements</span>
        </td>
      </tr>
      <tr>
        <td style=""><b>info.plist</b></td>
        <td style="">{RUNTIME}TemplateProject${YXCodeProjName}<br>
          Supporting Files${YXCodeProjName}-Info<span>.plist</span></td>
      </tr>
      <tr>
        <td style=""><strong>infoPlist.strings。</strong></td>
        <td style="">{RUNTIME}TemplateProject${YXCodeProjName}<br>
          文字列</td>
      </tr>
      <tr>
        <td style=""><strong>project.pbxproj</strong></td>
        <td style="">{RUNTIME}TemplateProject${YXCodeProjName}.xcodeproj<br>
          project.pbxproj</td>
      </tr>
      <tr>
        <td style=""><strong>xcscheme</strong></td>
        <td style="">{RUNTIME}TemplateProject${YXCodeProjName}.xcodeproj<br>
          xcshareddata}${YXCodeProjName}.xcschemes</td>
      </tr>
      <tr>
        <td style=""><strong>PrivacyManifest</strong></td>
        <td style=""><span>{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\Supporting Files\PrivacyInfo.xcprivacy</span></td>
      </tr>
    </tbody>
  </table>
  <p class="note"><strong></strong><span class="note">注意</span>これらの<span class="notranslate">paths</span> はVM用のみです。YYCの場合、注入されたコードは <span class="inline">{RUNTIME}\yyc\</span> ディレクトリに入ります。<span class="notranslate">paths</span> はVM用のものと同じかどうかはわかりません。</p>
  <p>なお、<a href="../../Settings/Game_Options/iOS.htm">iOS用と</a> <a href="../../Settings/Game_Options/tvOS.htm">tvOS用の</a>Game Optionがあり、<span data-keyref="GameMaker Name">GameMakerに</span> <span class="inline">Podfile.lock</span> ファイルを追加します。このセクションで<span class="notranslate">CocoaPods</span> Dependenciesを追加する場合は、これが必要です。</p>
  <h2>追加情報</h2>
  <p>あなたの<span class="notranslate">extension</span> にシステムフレームワークまたはサードパーティフレームワークが追加されている場合、これらは<strong>拡張機能プロパティウィンドウに </strong>リストアップされ、それぞれの横にチェックボックスが表示されるようになります。チェックボックスをマークすると、weak linking が有効になります。これは、含まれるライブラリのシンボルを独自の値で「上書き」する必要がある場合に便利ですが、そうすることでリンクが遅くなることに注意する必要があります。</p>
  <p>あなたが<span class="notranslate">extensions</span> のためにネイティブの<span class="notranslate">iOS</span> を作成することについての情報は、<a href="Extended_Examples.htm">ソース</a>例を参照してください。また、<span class="notranslate">CocoaPods</span> を<span class="notranslate">extensions</span> で使用することについての情報は、次のガイドを参照してください。</p>
  <ul class="colour">
    <li><a href="https://help.yoyogames.com/hc/en-us/articles/360008958858">iOSとtvOS：Cocoa Podsを使用する</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="../Extensions.htm"> <span class="notranslate">Extension</span> 編集部</a></div>
        <div style="float:right">次へ<a href="Extended_Examples.htm">ソースの例</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
iOS Extensions
tvOS Extensions
-->
  <!-- TAGS
extensions_ios
-->
</body>
</html>