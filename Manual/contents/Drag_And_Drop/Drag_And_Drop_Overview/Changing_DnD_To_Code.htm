<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>GMLのビジュアルをコードに変更する</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Article explaining how to change GML Visual to GML code" />
  <meta name="rh-index-keywords" content="GML Visual Overview - Changing GML Visual To Code" />
  <meta name="search-keywords" content="Change GML Visual to Code" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">GML</span> VisualからCodeに変更</h1>
  <p><span class="notranslate">GML</span> Visualのもう一つの特徴は、<span class="notranslate">GML</span> Codeに変換することで、アクションを使用する際に裏側で何が起こっているのかを正確に確認することができます。アクションを実際にコードに変換する前に、まずマウスの右ボタン<img> メニューオプションの<strong>ライブプレビューを</strong>使用して、アクションを<strong>プレビュー </strong>することができます。</p>
  <p><img>新しいウィンドウが開きます。</p>
  <p><img> <span class="notranslate">GML</span> Visual アクションを追加、変更、削除すると、 ライブ・プレビューが更新され、「舞台裏」で作成されている実際のコードが表示されます。ライブプレビューのコードを直接編集することはできませんが、セクションを選択してコピーし、 やコードアクション（例）に貼り付けることができます。<span class="notranslate">GML</span> <span class="notranslate">GML</span> <span class="notranslate">scripts</span> </p>
  <p>プレビューを見た後で、<span class="notranslate">GML</span> Visual をコードに変換したいと思った場合、これは、マウスの右ボタン<img> をアクションで任意のイベント<span class="notranslate">workspace</span> でクリックし、<strong>Convert To<span class="notranslate">GML</span> Code</strong> を選択することで再度行うことができます。</p>
  <p><img>アクションをコードに変換することはできますが、後で<em>個々の </em>アクションに戻すことはできないため、最初にこの操作を行うと、これは一方向の変換であるという警告メッセージが表示されます。ここで &quot;OK &quot;をクリックすると、変換が行われます。</p>
  <p><img>出来上がったコードでは、 <span class="inline">{}</span> を使って個々のアクションを区切り、どのアクションがどの関数や変数宣言に関連しているかを明確に確認することができます。<span class="notranslate">GML</span> Visual がより複雑であれば、コードも複雑になりますが、同じ一般的なルールが適用され、コードは<span class="notranslate">GML</span> Visual を書いたのと全く同じ順序で構造化されます。コードには、例えばこのように、使用する特定の値を保存するための追加の<strong>ローカル </strong>（一時）変数が追加されることがあることに注意してください。</p>
  <p><img alt="RMB Icon" class="icon" height="24" src="../../assets/Images/Icons/Icon_RMB.png" width="21" /></p>
  <p>このコードになります。</p>
  <p><img alt="Live Preview" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Preview_RMBMenu.png" /></p>
  <p>ここでは、まずローカル（一時）変数を作成し、それを <span class="inline">false</span> にセットします。次に、インスタンスが存在するかどうかをチェックし、ローカル変数に関数呼び出しの戻り値をセットします。次にローカル変数が <span class="inline">true</span> か <span class="inline">false</span> かをチェックし、 <span class="inline">true</span> であれば残りのコードを実行します。</p>
  <p><span class="notranslate">GML</span> Visual を使ってプログラミングを学ぶ場合、これは後の段階で<span class="notranslate">GML</span> を使うための重要なツールになりえますが、決して義務ではありませんし、<span class="notranslate">GML</span> Visual を使っても素晴らしいゲームを作ることは可能です!変換プロセスは一方通行ですが、アクションをコードに変換した後、コードエディタで右クリック<img> メニューを使用し、「<strong>Convert To<span class="notranslate">GML</span> Visual</strong>」を選択することによって、再び<span class="notranslate">GML</span> Visual を使用するように戻せることも知っておくとよいでしょう。これにより、以前に作成したコードが<a href="../Drag_And_Drop_Reference/Common/Execute_Code.htm">コード実行</a>アクション内に配置され、以前と同様に<span class="notranslate">GML</span> Visual を使用し続けることができます。</p>
  <p><img alt="GML VisualLive Preview Window" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Preview.png" /></p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る：<a href="../../Content.htm">インデックス</a></div>
        <div style="float:right">次へ<a href="Right_Mouse_Button_Menu_Options.htm">マウス右ボタンメニューオプション</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
GML Visual Change To GML
GML Visualto GML
-->
  <!-- TAGS
drag_and_drop_change
-->
</body>
</html>