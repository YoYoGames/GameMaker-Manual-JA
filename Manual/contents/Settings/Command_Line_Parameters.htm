<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>コマンドラインパラメーター</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <script src="../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains how to use Command Line Parameters when running your game" />
  <meta name="rh-index-keywords" content="Command Line Parameters" />
  <meta name="search-keywords" content="command line,AB testing,command line parameters" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>コマンドラインパラメーター</h1>
  <p>ゲームを作成する場合、最終的なコンパイルが正しいか、予期せぬエラーや相違がないかを確認するために、実行ファイルをプレイテストすることが重要です。しかし、実行ファイルを作成するということは、デバッグコンソールやコンパイラウィンドウにアクセスすることができないので、問題を突き止め、デバッグすることが難しい場合があります。しかし、これを解決する方法があります。それは、<strong>コマンドラインパラメータを</strong>使用して、ゲームの実行可能バージョンを実行するときに特定のプロパティを設定し、出力ログファイルを作成したり、その他の特殊な状況をテストしたりすることができるようにすることです。</p>
  <p class="note"><span class="note"><strong>注意事項</strong></span><strong>Windows </strong>標準のターゲット<strong>モジュールでのみ</strong>利用可能です。</p>
  <p>これを動作させるには、まず、ゲームの実行ファイル（<span class="notranslate">Windows</span> ）を作成し、テストマシンにインストールする必要があります。それができたら、デスクトップにゲームへの<em>ショートカットを </em>作成する必要があります。<img> ここで、 <span class="inline">*.exe</span> に渡すパラメータを追加します（ショートカットを作成するには、ゲームの実行ファイルを右クリックし、「<em>Send to</em>&gt;<em>Desktop（ショートカットの作成）</em>」を選択します）。</p>
  <p>ショートカットを作成したら、ターゲットパスに以下のいずれかのパラメータを使用することができます。</p>
  <p style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 3em"><span class="inline">-noaudio</span>:ゲーム内のすべてのオーディオをオフにします。</p>
  <p style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 3em"><span class="inline">-inawindow</span>:フルスクリーンモードで実行するように設定されている場合でも、ゲームをウィンドウで強制的に開始します。</p>
  <p style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 3em"><span class="inline">-output &lt;<em>filename</em>&gt;</span>:コードベースにあるデバッグメッセージを含むコンソール出力をファイル名に送信します。</p>
  <p style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 3em"><span class="inline">-debugoutput &lt;<em>filename</em>&gt;</span>:カスタムデバッグメッセージは除きますが、バグレポートのためのランナーからの追加情報を含むコンソール出力をファイルネームに送信します。</p>
  <p style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 3em"><span class="inline">-software</span>:ゲームグラフィックのレンダリングにハードウェアではなくソフトウェア<span class="notranslate">Vertex</span> Processing を使用するように強制します。これは、オンボードのIntel GFXチップセットを使用しているPCや、古いマシンで表示に問題がある場合に特に有効です。</p>
  <p style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 3em"><span class="inline">-intel</span>:これは<span class="notranslate">switch</span> で、どの GPU を使用しているかに関係なく、悪い Intel ドライバを修正するものです。この修正により、ゲームのパフォーマンスが著しく低下するため、修正が必要ない場合は使用しないでください。</p>
  <p style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 3em"><span class="inline">-vanillaGFX</span>:この機能を使うと、ドライバの製造元のチェックがオフになり、ゲームを「そのまま」テストするのに非常に便利です。</p>
  <p>注目すべきは、書き込みのたびにファイルを開いて閉じるため、 <span class="inline">-output</span> と <span class="inline">-debugoutput</span> の <span class="inline">&lt;<em>filename</em>&gt;</span> は、必要に応じて同じものを使用することができることです。</p>
  <p>ゲーム実行ファイルのショートカットを作成した場所で、右クリックして「プロパティ」を選択してください。</p>
  <p><img>上記のようなウィンドウが表示されます。ここで、<strong>Target</strong> <span class="notranslate">path</span> にあなたのコマンドラインを追加することができます。指定した<span class="notranslate">path</span> の末尾までスクロールし、スペースを入れ、パラメータ<span class="notranslate">string</span> を追加するだけです。例えば、デバッグファイル出力を作成するには、以下のようにします。</p>
  <p class="code">D:\Users\Me\GameMaker\CustomLoadBar-Default-1.0.0.0\CustomLoadBar.exe -debugoutput debug.txt</p>
  <p>これで、実行ファイルと同じ場所（ショートカットの場所ではなく、ゲームがインストールされている場所）に、完成したゲームのデバッグとコンパイラの情報を含む &quot;<span class="inline">debug.txt</span>&quot; というファイルが作成されます。OK」をクリックし、ショートカットを使ってゲームを実行すると、これらのパラメータが使用され、<span class="notranslate">debugging</span> のヘルプが表示されます。</p>
  <p>デバッグの方法については、マニュアルの「<a href="../Introduction/Debugging.htm">デバッグ</a>」の項をご覧ください。</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">コマンドラインを使ったA/Bテスト</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot"><span class="notranslate">YoYo</span> ランナーには、特別なコマンドラインパラメータも用意されています。</p>
    <p class="dropspot" style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 5em"><span class="inline">-game &lt;<em>filename</em>&gt;</span>: 与えられたゲームファイルをロードします。
      <br>
    </p>
    <p class="dropspot">なぜこれを使うのか？通常は使用しませんが、一度に複数のバージョンのゲームを実行したい場合、これを使用すると、A/B比較テストが非常に簡単に行えるようになります。この方法を使えば、誰かと一緒に集中テストをしたり、デザイナーとして、並べてテストをすることで、より良い感触を得ることができます。</p>
    <p class="dropspot">これをセットアップするには、いくつかのことを事前に知っておく必要があります。まず最初に、ランナー本体への<span class="notranslate">path</span> が必要です。これは、<span class="notranslate">Windows</span> OSの<strong>Program Data</strong>フォルダにあります（デフォルトでは隠されている場合がありますので、表示プロパティを変更する必要があります）。典型的な形式は次のとおりです。
      <br>
      <br>
    </p>
    <p class="code">C:\ProgramData\GameMaker\Cache\runtimes\&lt;runtime_version&gt;\windows\Runner.exe
      <br />
    </p>
    <p class="dropspot">runtime_versionフォルダーは、現在インストールされている<span class="notranslate">runtimes</span> に依存することに注意してください。また、ランナーを指定するために、<span class="notranslate">path</span> と <span class="inline">&lt;<em>yourgame</em>&gt;.win</span> ファイルが必要です。これを見つける最も簡単な方法は、<strong>Temp フォルダ </strong>（通常 <span class="inline">%localappdata%\Temp\GameMakerStudio\&lt;game_name&gt;\</span> にあります）に移動して、 <span class="inline">*.win</span> を検索することです。これにより、利用可能なすべてのファイルが表示され、完全な<span class="notranslate">path</span> を取得する必要があるファイルを簡単に選択できます。</p>
    <p class="dropspot">実行ファイルにしたようにランナーへのショートカットを作成し、必要に応じてパラメータを変更することもできますが、それではテストの間にランナーを開いて編集しなければならず、サイドバイサイドのテストにこの機能を使用する意味がなくなってしまいます。その代わりに、いくつかの小さな「バッチ」ファイルを作成して、これを処理することにします。</p>
    <p class="dropspot">そのためには、まずデスクトップに新しいテキスト文書を作成し、それをメモ帳（または他のテキストエディタ）で開きます。以下を追加してください。
      <br>
      <br>
    </p>
    <p class="code">START C:\ProgramData\GameMaker\Cache\runtimes\&lt;runtime_version&gt;\windows\Runner.exe -game &lt;LOCAL TEMP PATH&gt;\&lt;GAMENAME&gt;.win
      <br />
    </p>
    <p class="dropspot">temp<span class="notranslate">path</span> をゲームの <span class="inline">*.win</span> ファイルに設定し、これを &quot;<span class="inline">GM_Test_1.bat</span>&quot; としてデスクトップに保存する必要があります（メモ帳は保存ダイアログのオプションで「すべてのファイル」を選択しない限り、自動的に <span class="inline">*.txt</span> ファイルとして保存されることに注意してください）。最終的なコマンドの例は次のようになります。
      <br>
    </p>
    <p class="code">START C:\ProgramData\GameMaker\Cache\runtimes\runtime-9.9.1.199\windows\Runner.exe -game D:\Users\Mark\AppData\Local\Temp\GameMaker\AlphaDog_Reboot\AlphaDog_Reboot.win
      <br />
    </p>
    <p class="dropspot">今度は、別のテキストファイルを作成し、同じ行を追加します。今度は、サイドバイサイドテストを行う2番目のバージョンのゲームの<span class="notranslate">path</span> を指定し、これを &quot;<span class="inline">GM_Test_2.bat</span>&quot; という名前で保存します。<img> いずれかをダブルクリックすると、異なるバージョンのゲームが表示されます。バッチファイルにしておけば、再び開いて編集したり、テストするゲームを変更したりすることが簡単にできます。</p>
    <p class="dropspot">
      <br />
    </p>
    <p class="dropspot"></p>
  </div>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a data-xref="{title}" href="Runner_Details/Runner_Details.htm">ランナー＆コンパイラー</a></div>
        <div style="float:right">次へ<a href="YoYo_Compiler.htm">ヨーヨーコンパイラ</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Command Line Pararmeters
A/B Testing
-->
  <!-- TAGS
command_line_params
-->
</body>
</html>