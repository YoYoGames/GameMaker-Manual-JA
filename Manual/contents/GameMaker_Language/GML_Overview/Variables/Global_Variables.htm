<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>グローバル変数</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining global variables" />
  <meta name="rh-index-keywords" content="global,globalvar,Global Variables" />
  <meta name="search-keywords" content="global,global variables,globalvar" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>グローバル変数</h1>
  <p><strong>グローバル </strong>変数の基本的な説明は、一度宣言すれば、特にどのインスタンスにも属さず、しかもすべての人がアクセスできるものである。<a href="Local_Variables.htm">ローカル変数と</a>同様に、グローバル変数も識別子を用いて宣言する必要がありますが、ローカル変数と異なり、グローバル変数は<em>ゲームの終了まで</em>メモリ上に残ります。つまり、プレイヤーが持っている弾丸の数を記録するためのグローバル変数を作成し、ゲーム中のさまざまなポイントで、任意のインスタンスや関数から、いつでもこの変数を更新するだけです。基本的に、グローバル変数は特定のインスタンスに属さず、すべてのインスタンスからアクセス、変更、使用することができ、変数に加えられた変更は、その変数を使用するすべてのインスタンスが影響を受けるという意味で「グローバル」です。例を見てみましょう。</p>
  <p class="code">global.food = 5;</p>
  <p>変数&quot;<span class="inline">food</span>&quot;の宣言は、まず&quot;<span class="inline">global</span>&quot;を書き、次に&quot;<span class="inline">.</span>&quot;を書き、この変数がグローバルスコープになったことを<span data-keyref="GameMaker Name">GameMakerに</span>伝えます。今後、この変数にアクセスしたり、変更したりする必要があるときは、このフォームを使用する必要があります。というわけで、&quot;<span class="inline">food</span>&quot; という新しい変数を作成し、グローバル宣言しました。これで、どのインスタンスや関数もこの変数を使用したり変更したりすることができ、他のすべてのインスタンスがこれを「見る」ことができます。たとえば、<span class="notranslate">object</span> という別の食べ物があり、プレイヤーが衝突すると、衝突イベントでこの食べ物が表示されます。</p>
  <p class="code">global.food +=1;</p>
  <p>また、この値を描画する別の<span class="notranslate">object</span> 、このようにします。</p>
  <p class="code">draw_text(32, 32, &quot;food = &quot; + string(global.food));</p>
  <p>グローバル変数を使用すると、値を変更すると、この変数を参照している<span class="notranslate">objects</span> のすべてのインスタンスにその変更が反映されるのを確認できます。<i>ローカル</i>変数と同様に、グローバル変数にインスタンス変数と同じ名前をつけないように注意しなければなりません。一般的には、ゲームの開始時（例えば、ゲームの最初の<span class="notranslate">object</span> に配置された最初のオブジェクトインスタンスの<a href="../../../The_Asset_Editors/Object_Properties/Other_Events.htm">ルームスタート</a>イベント）に、すべてのグローバル変数を宣言する1つの<span class="notranslate">room</span> 、またはそれらをまとめて宣言する1つの<a href="../Script_Functions.htm">スクリプト関</a>数を用意します。これにより、変数名を確認したり値を編集する必要がある場合に、戻ってすべてを一度に参照できる便利な場所になります。</p>
  <p><span data-keyref="GameMaker Name">GameMakerには</span>「組み込み型」のグローバル変数もあるので、インスタンス変数に同じ名前をつけたり、同じ名前のグローバル変数を持っていて、なぜエラーになるのか不思議に思うことがあるので、注意が必要です。グローバル変数は、コードエディタ上で色が変わり、下部のオートコンプリートバーに表示されるので、簡単に見つけることができます。組み込みのグローバル変数のほとんどは、非常に特殊な用途を持っており、マニュアルの適切なセクションに記載されています - しかし、頻繁に使用され、他の場所に記載されていない2つの重要なものがあります。</p>
  <ul class="colour">
    <li><span class="inline"><a data-xref="{title}" href="Builtin_Global_Variables/async_load.htm">async_load</a></span></li>
    <li><span class="inline"><a data-xref="{title}" href="../../GML_Reference/Game_Input/Gesture_Input/event_data.htm">event_data</a></span></li>
  </ul>
  <p>また、3 つの<b>非推奨の</b>組み込みグローバル変数があります (これらの変数は<span class="notranslate">GameMaker</span> の以前のバージョンからのレガシープロジェクトをサポートするためにのみ設計されています。 <b><i>新しいプロジェクトでは使用しない</i></b>):</p>
  <ul class="colour">
    <li><span class="inline"><a data-xref="{title}" href="Builtin_Global_Variables/score.htm">score</a></span></li>
    <li><span class="inline"><a data-xref="{title}" href="Builtin_Global_Variables/health.htm">health</a></span></li>
    <li><span class="inline"><a data-xref="{title}" href="Builtin_Global_Variables/lives.htm">lives</a></span></li>
  </ul>
  <p>最後に、<span class="notranslate">script</span> 関数とメソッドに使用できる2つの変数があります。</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="Builtin_Global_Variables/argument.htm">argument</a></li>
    <li><a data-xref="{title}" href="Builtin_Global_Variables/argument_count.htm">argument_count</a></li>
  </ul>
  <p>グローバル変数の宣言には、以下の形式も使用できますが <i><b>後方互換性のためにのみ含まれています</b></i><span class="notranslate">GameMaker</span> の将来のバージョンではこの形式がサポートされない可能性があるため、新しいプロジェクトでこの形式を使用することは推奨されません。</p>
  <p> <span class="inline">globalvar</span> グローバル変数を作成する第二の方法は、ローカル変数と同じように <span class="inline">var</span> 宣言でグローバル変数を宣言することである。</p>
  <p class="note"><b>重要!</b> <span class="inline">globalvar</span> 宣言は<b>非推奨で</b>、レガシーな目的のためにのみサポートされています。グローバル変数をマークするには、<b>常に</b> <span class="inline">global.</span> 識別子を使用する必要があります。</p>
  <p>この（非推奨）宣言は、以下のように使用される。</p>
  <p class="code">globalvar food;<br />
    food = 5;</p>
  <p>このように宣言すると、変数 &quot;food&quot; はグローバル変数とみなされ、 <span class="inline">global.</span> のプレフィックスが不要になります。これは、コード内でグローバル変数を識別するのがかなり難しくなることと、同じ変数名を異なる<span class="notranslate">objects</span> やインストールした<span class="notranslate">extensions</span> で使用すると、変数の重複が発生しやすくなることを意味します。このように宣言されたグローバル変数には、次のようにアクセスします。</p>
  <p class="code">food += 2;</p>
  <p>または</p>
  <p class="code">draw_text(32, 32, &quot;food = &quot; + string(food));</p>
  <p>このように、グローバル変数であることを示すものが何もないと、ゲーム内で微妙な問題が発生する可能性があるため、この宣言は避けるべきでしょう。</p>
  <p>グローバル変数を扱う際に役立つように設計された関数がいくつかあり、次のページで紹介しています。</p>
  <ul class="colour">
    <li><a href="../../GML_Reference/Variable_Functions/Variable_Functions.htm">変数関数</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="../Variables_And_Variable_Scope.htm">変数と変数のスコープ</a></div>
        <div style="float:right">次へ<a href="Constants.htm">定数</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
global
globalvar
global variables
-->
  <!-- TAGS
global_variables
-->
</body>
</html>