<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>くりかえす</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the repeat function" />
  <meta name="rh-index-keywords" content="repeat" />
  <meta name="search-keywords" content="if,else,then,?,ternary,conditional" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>くりかえす</h1>
  <p><span class="notranslate">GameMaker Language</span> には、<i>ループを</i>実行する方法がいくつかあります。つまり、ある文やステートメントがそれ自身をある回数繰り返し実行するようにします。最も簡単なのは、 <span class="inline">repeat</span> で、次のような形式です。</p>
  <p class="code">repeat (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p> <span class="inline">repeat</span> では、与えられた<a class="glossterm" data-glossterm="声明" href="#">文は</a> <a class="glossterm" data-glossterm="顔" href="#">式の</a>丸められた値で示される回数だけ繰り返されます。たとえば、次のようにすると、ランダムな位置に5つのボールが作成されます。</p>
  <p class="code">repeat (5)<br />
    {<br />
        instance_create_layer(random(400), random(400), &quot;Instances&quot;, obj_ball);<br />
    }</p>
  <p>この機能は、同じコードを何度も入力するのを避けるためや、配列の使用、操作回数のカウントなど、非常に便利です。また、1つの文に限らず、中括弧（ <span class="inline">{}</span> ）で囲むことで複数の文を繰り返すことができます。例えば</p>
  <p class="code">var _x = 32;<br />
    repeat (global.p_lives)<br />
    {<br />
        draw_sprite(spr_heart, 0, _x, 32);<br />
        _x += sprite_get_width(spr_heart);<br />
    }</p>
  <p>上記の例では、グローバル変数 &quot;lives&quot; が持つ<a class="glossterm" data-glossterm="くりかえし" href="#">反復</a>回数の分だけ中括弧内の記述を繰り返し、各反復回でハート<span class="notranslate">sprite</span> を <span class="inline">_x</span> の位置に描き、その後ハート<span class="notranslate">sprite</span> の幅に基づき位置を少しずつ移動させます。</p>
  <p><strong> <span class="inline">repeat</span> <span class="notranslate">loop</span></strong>はいつ使うのですか？ 1つ以上のステートメントを一定の回数だけ繰り返したいとき、特に反復回数を管理する必要はありません。 </p>
  <p>特筆すべきは、特殊な <span class="inline"><a href="break.htm">break</a></span> と <span class="inline"><a href="continue.htm">continue</a></span> ステートメントを内部で使用できることです。 <font face="Lucida Console"><span style="font-size: 16px;"><b>繰り返す</b></span></font>ループも同様です。 <span class="inline">break</span> を使用すると、<span class="notranslate">loop</span> を直ちに終了し、<span class="notranslate">loop</span> が終了した後にイベントや関数内にあるコードに移動します。</p>
  <p class="code">var i = 0;<br />
    var temp = 0;<br />
    repeat (10)<br />
    {<br />
        temp += array[i];<br />
        if (temp &gt; max_total)<br />
        {<br />
            break;<br />
        }<br />
        else<br />
        {<br />
            i += 1;<br />
        }<br />
    }</p>
  <p>上記のコードでは、<span class="notranslate">loops</span> から 10 個の<a href="../Arrays.htm">配列</a>値を取得し、ローカル変数に追加しています。ローカル変数の合計値が <span class="inline">max_total</span> で指定された値より大きければ、<span class="notranslate">loop</span> を break で終了し、それ以外は<span class="notranslate">loop</span> を続行します。 </p>
  <p> <span class="inline">continue</span> を <span class="inline">repeat</span> <span class="notranslate">loop</span> で使用する例としては、次のようになります。</p>
  <p class="code">repeat(10)<br />
    {   <br />
        var _x = random(room_width);<br />
        var _y = random(room_height);<br />
        if (instance_position(_x, y, obj_Enemy)<br />
        {<br />
            continue;<br />
        }<br />
        instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br />
    }</p>
  <p>このコードは10回繰り返され、ランダムな<span class="notranslate">room</span> の位置を生成し、その位置に<span class="notranslate">object</span> <span class="inline">obj_Enemy</span> のインスタンスが存在するかどうかをチェックします。もし存在すれば、現在の<span class="notranslate">loop</span> の反復は <span class="inline">continue</span> を使って終了され、新しい反復が開始されます。もし存在しなければ、<span class="notranslate">object</span> <span class="inline">obj_Enemy</span> のインスタンスがランダムな位置に生成されます。</p>
  <p><span class="notranslate">loop</span> 関数の詳細な例については、以下のセクションを参照してください。 <a href="while.htm"><span class="inline">while</span></a>, <a href="do___until.htm"><span class="inline">do... until</span></a>と <a href="for.htm"><span class="inline">for</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="../Language_Features.htm">言語機能</a></div>
        <div style="float:right">次のページ <a href="while.htm"><span class="notranslate">while</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
repeat
-->
  <!-- TAGS
repeat
-->
</body>
</html>