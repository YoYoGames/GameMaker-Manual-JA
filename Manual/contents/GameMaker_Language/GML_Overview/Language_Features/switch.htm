<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>スイッチ</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the switch function" />
  <meta name="rh-index-keywords" content="switch,case" />
  <meta name="search-keywords" content="switch,default" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>スイッチ</h1>
  <p>特定の値に応じてインスタンスに異なる動作をさせたい場面は少なくない。これを行うには、いくつかの連続した <a href="If_Else_and_Conditional_Operators.htm"><span class="inline">if / else</span></a>ステートメントを使用しますが、可能な選択肢が2つか3つ以上になると、通常は <span class="inline">switch</span> ステートメントを使用する方が簡単です。</p>
  <p> <span class="inline">switch</span> 文は次のような構文です。</p>
  <p class="code">switch (&lt;expression&gt;)<br />
    {<br />
        case &lt;constant1&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
    <br />
        case &lt;constant2&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
        <br />
        // more cases (with breaks)<br />
    <br />
        default:<br />
            &lt;code&gt;;<br />
    }
  </p>
  <p>これは次のように動作します。</p>
  <ul class="colour">
    <li>まず、<a class="glossterm" data-glossterm="顔" href="#">式が</a>実行されます。</li>
    <li>次に、その結果を、 <span class="inline">case</span> の<span class="glossextra">各文章の</span>後にある異なる定数と比較する。定数」と言ったのは、その場合の値が変数式であってはならず、任意の<a href="../Data_Types.htm">データ</a>型の固定値でなければならないという意味であり、例えば<span class="inline2">「fight</span>」や<span class="inline2">3</span>、キーワードの <span class="inline2"><span class="inline"><a href="../Instance_Keywords.htm">noone</a></span></span>. </li>
    <li>実行は、値が一致する最初の <span class="inline">case</span> 文から始まり<i>、<a href="break.htm"><span class="notranslate">break</span></a> 文に遭遇するまで</i>行われます。</li>
    <li>一致する値を持つ <span class="inline">case</span> 文がない場合、 <span class="inline">default</span> 文が実行されます。 <span class="inline">default</span> ステートメントがあることは必須ではなく、もし何もなければ、マッチするケースがないときに何も行われません。 <span class="inline">default</span> 文は、<span class="notranslate">switch</span> ブロックのどこにでも入れることができますが、伝統的には、すべてのケースの後の一番下に配置されます。</li>
  </ul>
  <p class="note"><span class="note">注</span> <span class="notranslate">switch</span> 文は、 <span class="inline">break</span> に遭遇するまで、 <span class="inline">case</span> 内のコードを実行し続けます。 <span class="inline">break</span>をケースの最後に使用しないと、<span class="notranslate">switch</span> が次の <span class="inline">case</span> に「リーク」し、 <span class="inline">break</span>がない場合は <span class="inline">default</span> セクションにさえもリークします。これは、1つの <span class="inline">case</span> の実行が複数の <span class="inline">case</span>の実行につながるため、意図しない動作を引き起こす可能性があります。したがって、適切な場合には、 <span class="inline">break</span> を使用するようにしてください。</p>
  <p><span class="notranslate">switch</span> 文の簡単な使用例としては、次のようなものがあります。</p>
  <p class="code">switch (player_lives)<br />
    {<br />
        case 3:<br />
            draw_sprite(20, 20, spr_face_healthy);<br />
        break;<br />
    <br />
        case 2:<br />
            draw_sprite(20, 20, spr_face_hurt);<br />
        break;<br />
    <br />
        case 1:<br />
            draw_sprite(20, 20, spr_face_fatal);<br />
        break;<br />
    <br />
        default:<br />
            draw_sprite(20, 20, spr_face_fainted);<br />
        break;<br />
    }
  </p>
  <p>なお、<span class="inline">break</span> は必ずしもすべての <span class="inline">case</span> で必要なわけではないので、同じステートメントを実行するために複数の <span class="inline">case</span> ステートメントを使用することができます。特定の <span class="inline">case</span> に対して <span class="inline">break</span> ステートメントがない場合、実行は単に次のケースのコードで続行されます、例．</p>
  <p class="code">switch (keyboard_key)<br />
    {<br />
        case vk_left:<br />
        case ord(&quot;A&quot;):<br />
            x -= 4;<br />
        break;<br />
    <br />
        case vk_right:<br />
        case ord(&quot;D&quot;):<br />
            x += 4;<br />
        break;<br />
    <br />
        case vk_up:<br />
        case ord(&quot;W&quot;):<br />
            y -= 4;<br />
        break;<br />
    <br />
        case vk_down:<br />
        case ord(&quot;S&quot;):<br />
            y += 4;<br />
        break;<br />
    }
  </p>
  <p>上記のコードでは、 <span class="inline">switch</span> を使ってキーボードイベントをチェックし、それを <span class="inline">case</span> にリストアップされた各イベントと比較しています。もし、必要な値のいずれかを満たしていれば、対応するコードが実行されます。<span class="inline">switch</span> は、複数の <span class="inline">cases</span> をチェックし、次の<span class="inline">break</span> までコードを実行することができます。</p>
  <p> <span class="inline">case</span> それぞれが独自のコードを持つことができるので、あるケースが独自のコードを実行し、次のケースのコードも実行するという、一種の「継承」システムを設定することができるのです。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="../Language_Features.htm">言語機能</a></div>
        <div style="float:right">次のページ <a href="break.htm"><span class="notranslate">break</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
switch
-->
  <!-- TAGS
switch
-->
</body>
</html>