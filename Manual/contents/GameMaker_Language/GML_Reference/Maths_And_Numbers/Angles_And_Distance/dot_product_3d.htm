<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ドットプロダクトスリーディー</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for dot_product_3d" />
  <meta name="rh-index-keywords" content="dot_product_3d" />
  <meta name="search-keywords" content="dot_product_3d" />
  <meta name="is_pure" content="true" />
</head>

<body>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>ドットプロダクトスリーディー</h1>
  <p>内積とは、2つのベクトルの角度関係を表す値で、2つのベクトルを取り、掛け合わせ、足し合わせることで求められる。ドットプロダクトという名称は、中央のドット&quot;-&quot;に由来する。
    スカラー積はベクトルではなくスカラーであることを強調した名称である）。</p>
  <p>実際の数式はこのように書くことができる。</p>
  <p><img alt="Dot Product formula" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image.png"/></p>
  <p>2Dでは、ベクトル <span class="inline">a[x1,y1]</span> と <span class="inline">b[x2,y2]</span> の内積は <span class="inline">x1x2 + y1y2</span> 、3Dでは、ベクトル <span class="inline">a[x1,y1,z1]</span> と <span class="inline">b[x1,y1,z1]</span> の内積は <span class="inline">x1x2 + y1y2 + z1z2</span> 、3Dでは、ベクトル の内積は 。つまり、<span data-keyref="GameMaker Name">GameMakerの</span>dot_product_3dは、次のように計算されます。</p>
  <p class="code">a · b = (x1*x2) + (y1*y2) + (z1*z2);</p>
  <p>内積の不思議なところは、入力ベクトルが作る角度と関係があり、次のように表現できることです。</p>
  <p class="code">a · b = (length of a) * (length of b) * cos(angle)</p>
  <p>つまり、2つのベクトルの内積は、それらのベクトル間の角度の余弦に、それぞれのベクトルの長さを掛けたものになるのです。以下は、その説明のための画像です。</p>
  <p><img alt="Dot Product ilustration" class="center" height="143" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image_2.png" width="406"/></p>
  <p class="note"><strong>注</strong>：ベクターの詳細については、<a href="../../../../Additional_Information/Vectors.htm">こちらを</a>ご覧ください。</p>
  <p>任意の2つのベクトルから、その内積の結果との関係で述べられることがいくつかある。</p>
  <ul class="colour">
    <li>aとbが垂直（互いに90度）であれば、 <span class="inline">cos(ang)</span> が0になるため、内積の結果は0になります。</li>
    <li>aとbのなす角が90度より小さい場合、 <span class="inline">cos(ang)</span> 、内積は正（0より大きい）になります。</li>
    <li>aとbの角度が90度より大きい場合、 <span class="inline">cos(ang)</span> 、内積は負（0より小さい）になります。</li>
  </ul>
  <p>では、ゲームを作る私たちにとって、これはどういう意味を持つのでしょうか。この数学的関係は様々な状況で利用できますが、それを知るには実際のシナリオを作り、何が起こっているのかを自分で確認するのが一番です。最も簡単な方法のひとつは
    例えば、プラットフォームゲームにおいて、敵の<i>法線</i>ベクトルと3次元の床が形成する平面より上にいる場合、敵はプレイヤーを「見る」ように、単純な「高さ」チェックを生成する方法です。</p>
  <p><img>基本的には、敵から床に垂直なベクトル法線を取得して、それを
    プレイヤーから敵へのベクトルを取得します。そして、これらのベクトルのdot_productを求め、その結果が正であれば、プレイヤーは敵の床面より「上」、負であれば、「下」にいることになります。この動作をさせるための実際のコード
    は、以下の例で示されます。</p>
  <p> </p>
  <h4><b>構文です。</b></h4>
  <p class="code">dot_product_3d(x1, y1, z1, x2, y2, z2)</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th><th>タイプ</th>
        <th>商品説明</th>
     </tr>
      <tr>
        <td><span class="notranslate">x1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the first vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the first vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">z1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The z coordinate of the first vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">x2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the second vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the second vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">z2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The z coordinate of the second vector.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>例</h4>
  <p class="code">var x1, y1, x2, y2;<br/> x1 = 0;<br/> y1 = 1;<br/> z1 = 0;<br/> x2 = o_Player.x - x;<br/> y2 = o_Player.y - y;<br/> z2 = o_Player.z - z; if dot_product_3d(x1, y1, z1, x2, y2, z2) &gt; 0 above=true else above=false;</p>
  <p>上記のコードでは、インスタンスのy（上）軸に沿った法線ベクトルを作成し、プレイヤー（<span class="notranslate">object</span> &quot;o_Player&quot;）のベクトルを自分自身に取り込んでいます。最後に、この2つのベクトルの内積を計算し、それが0より大きい場合は、変数
    &quot;above&quot; を true に、0 以下なら &quot;false&quot; に設定する。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="Angles_And_Distance.htm">角度と距離</a></div>
        <div style="float:right">次のページ <a href="dot_product_normalised.htm"><span class="notranslate">dot_product_normalised</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
dot_product_3d
-->
  <!-- TAGS
dot_product_3d
-->

</body></html>