<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>display_set_timing_method</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for display_set_timing_method" />
  <meta name="rh-index-keywords" content="display_set_timing_method,tm_sleep,tm_countvsyncs,tm_systemtiming" />
  <meta name="search-keywords" content="display_set_timing_method,tm_sleep,tm_countvsyncs,tm_systemtiming" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>display_set_timing_method</h1>
  <p>この関数は、ゲームのレンダリングに使用するタイミング方式を設定するために使用できます。メソッドには、以下の定数のいずれかを指定します。</p>
  <table>
    <tbody>
      <tr>
        <th>定数</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">tm_sleep</span></td>
        <td>スリープマージン値をメインのタイミングとして使用する</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">tm_countvsyncs</span></td>
        <td>vsync タイミングをメインのタイミングとして使用する（サポートされているすべてのプラットフォームでのデフォルト）。</td>
      </tr>
    </tbody>
  </table>
  <p>vsync タイミングメソッドは、ターゲットプラットフォームの垂直同期サポートを使用して、ゲームのレンダリングタイミング計算のアンカーを提供します。一方、モードをスリープマージンに設定すると、待機またはスリープによって各フレームが正しい時間（1/30 または 1/60秒など）持続するように試みます。一般に、デフォルトの vsync タイミングが最も滑らかな結果をもたらしますが、vsync 方式を使用する場合、影響は小さくなるものの、スリープマージンの値はまだ関連しているので、この方式を使用する場合はデフォルト値のままにしておくことをお勧めします。</p>
  <p>PS4、<span class="notranslate">Ubuntu</span> 、HTML5を<i>除く</i>すべてのプラットフォームでは、デフォルトで<span data-keyref="GameMaker Name">GameMakerは</span>vsyncタイミング方式を使用し、サポートされていないプラットフォームでは、スリープ余裕<i>タイミングのみ</i>使用することができます。</p>
  <p>スリープマージンを設定したい場合は、以下の関数を使用して設定することができます。 <a href="display_set_sleep_margin.htm"><span class="inline">display_set_sleep_margin()</span></a>また、現在どのタイミングが使われているかは、関数 <a href="display_get_timing_method.htm"><span class="inline">display_get_timing_method()</span></a>.</p>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">display_set_timing_method(method);</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th>
        <th>タイプ</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate">method</span></td>
        <td><span data-keyref="Type_Constant_Display_Timing_Method">表示タイミング方式 一定</span></td>
        <td><span class="notranslate">The timing method to use (see the list of constants, above)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>例</h4>
  <p class="code">if display_get_timing_method() != tm_sleep<br />
    {<br />
        <span data-field="title" data-format="default">display_set_timing_method</span>(tm_sleep);<br />
        if (display_get_sleep_margin() != 20) <br />
        {<br />
            display_set_sleep_margin(20);<br />
        }<br />
    }</p>
  <p>上記のコードでは、タイミングメソッドをチェックし、 <span class="inline">tm_sleep</span> に設定されていなければそれに設定し、スリープマージンを20に設定します。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="Cameras_And_Display.htm">カメラとディスプレイ</a></div>
        <div style="float:right">次のページ <a href="display_set_sleep_margin.htm"><span class="notranslate">display_set_sleep_margin</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
display_set_timing_method
tm_sleep
tm_countvsyncs
tm_systemtiming
-->
  <!-- TAGS
display_set_timing_method
-->
</body>
</html>