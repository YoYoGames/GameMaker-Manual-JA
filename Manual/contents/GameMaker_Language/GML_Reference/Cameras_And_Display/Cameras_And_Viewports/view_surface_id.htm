<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>view_surface_id</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for view_surface_id" />
  <meta name="rh-index-keywords" content="view_surface_id" />
  <meta name="search-keywords" content="view_surface_id" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>view_surface_id</h1>
  <p>この変数を使用すると、与えられたビューポートの内容をサーフェスに描画するように設定したり、ビューポートにサーフェスが割り当てられている場合は現在のサーフェスIDを取得したりすることができます。サーフェスを扱う場合、しばしば画面の可視領域<i>全体を</i>サーフェスにキャプチャする必要があるため、この変数を使用してビューポートに割り当てることになります。これは、選択されたビューに表示されるすべてのものが、割り当てられたサーフェスに描画されるようになることを意味します。ビューはスクリーンには描画さ<i>れないので</i>、どちらかを行う必要があります。</p>
  <ul class="colour">
    <li>新しいビューを有効にし、そのビューにのみサーフェスを描画します。 <a href="view_current.htm"><span class="inline">view_current</span></a>どのビューで描画されているかを確認するため）</li>
    <li>これらのイベントはビューに依存しないため、インスタンスの Draw GUI または Post Draw イベントでサーフェイスを描画します。</li>
  </ul>
  <p>また、この変数を読み込むと、選択したビューに割り当てられたサーフェイスのインデックスを取得できます。サーフェイスが割り当てられていない場合は-1を返します。以下の拡張例は、ビューをキャプチャし、<b>Draw GUI</b>イベントで描画するための基本的なセットアップを示しています。サーフェスの詳細については、<a href="../../Drawing/Surfaces/Surfaces.htm">サーフェスセクションを</a>参照してください。</p>
  <p>なお、ビューポートをサーフェスに設定するには、関数 <a href="view_set_surface_id.htm"><span class="inline">view_set_surface_id()</span></a>.</p>
  <div data-conref="../../../../assets/snippets/Recursive_Surface_Draw_Error.hts"> </div>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">view_surface_id[0...7];</p>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_ID_Surface">Surface ID</span> or -1 (if no surface has been assigned)</p>
  <p> </p>
  <h4>拡張された例。</h4>
  <p>この拡張例では、サーフェスを作成し、ビューポート[0]に割り当て、そのポートに割り当てられたカメラビューをキャプチャし、GUIイベントの描画でそれを画面に描画します。まず始めに、コントローラインスタンスの<b>Create</b>イベントで、surface変数を初期化する必要があります。</p>
  <p class="code">surf = -1;</p>
  <p>変なエラーや<span class="notranslate">undefined</span> の動作を防ぐために、すべてのサーフェス関数は、本当は<b>Draw</b>イベントで使用すべきなので、サーフェス変数を -1 に設定しました。これで、メインの<b>Draw</b>イベントでこのようになります。</p>
  <p class="code">if !surface_exists(surf)<br />
    {<br />
        surf = surface_create(camera_get_view_width(view_camera[0]), camera_get_view_height(view_camera[0]));<br />
        view_surface_id[0] = surf;<br />
    }</p>
  <p>サーフェスは<i>揮発性</i>であり、OSのメモリ管理などによりいつでもメモリから削除される可能性があるため、ここではサーフェスが存在するかどうかを確認し、存在しない場合は作成してビュー0に割り当てます。この時点で何もしなければ、ゲームを実行したときに、すべての描画はサーフェス上で行われ、サーフェス自体はどこにも描画されないので、単に真っ白な画面が表示されます。したがって、次のように<b>Draw GUI</b>イベントでサーフェスをスクリーンに描画する必要があります。</p>
  <p class="code">if surface_exists(surf)<br />
    {<br />
        draw_surface_stretched(surf, 0, 0, display_get_gui_width(), display_get_gui_height());<br />
    }</p>
  <p>このコードでは、ビューカメラから作成したサーフェイスをGUIレイヤー全体を埋めるように引き伸ばしたものを描画しています。</p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背面<a href="Cameras_And_View_Ports.htm">カメラとビューポート</a></div>
        <div style="float:right">次のページ <a href="view_get_camera.htm"><span class="notranslate">view_get_camera</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
view_surface_id
-->
  <!-- TAGS
view_surface_id
-->
</body>
</html>