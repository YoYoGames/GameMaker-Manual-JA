<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>バッファリングテル</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_tell" />
  <meta name="rh-index-keywords" content="buffer_tell" />
  <meta name="search-keywords" content="buffer_tell" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>バッファリングテル</h1>
  <p>を使用して、<span class="notranslate">buffer</span> にデータを読み書きする場合。 <a href="buffer_read.htm"><span class="inline">buffer_read()</span></a>または <a href="buffer_write.htm"><span class="inline">buffer_write()</span></a>を使用すると、現在の「シーク」位置が、書き込んだり読み込んだりしたバイト数だけ進みます。
    この関数は、現在のシーク位置を取得し、他の<span class="notranslate">buffer</span> 関数で使用することができます。例えば、<span class="notranslate">buffer</span> のアライメントを4バイトに設定し、1バイトのデータを書き込む場合、 <span class="inline">buffer_tell()</span> を実行すると、1バイトのデータが書き込まれます。
    しかし、同じ1バイトの別のデータを書いて、 <span class="inline">buffer_tell()</span> を実行すると、アライメントがその位置までデータを「パディング」したため、5という戻り値が得られます。</p>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">buffer_tell(buffer);</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th><th>タイプ</th>
        <th>商品説明</th>
     </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td><td><span data-keyref="Type_ID_Buffer"></span></td>
        <td><span class="notranslate">The index of the buffer to use.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>例</h4>
  <p class="code">var pos = buffer_tell(buff); buffer_seek(buff, buffer_seek_start, 0);<br/> val[0] = buffer_read(buff, buffer_S16);<br/> val[1] = buffer_read(buff, buffer_S16);<br/> val[2] = buffer_read(buff, buffer_S16);<br/> buffer_seek(buff, buffer_seek_start, pos);</p>
  <p>上記のコードでは、変数 &quot;buff &quot;でインデックスされた<span class="notranslate">buffer</span> 内の現在のシーク位置がローカル変数 &quot;pos &quot;に格納されます。その後、<span class="notranslate">buffer</span> のシーク位置が<span class="notranslate">buffer</span> の先頭に設定され、3つのデータが格納されます。
    を配列に読み込んで、最後に<span class="notranslate">buffer</span> のシーク位置を以前の位置に再設定します。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る：<a href="Buffers.htm">バッファー</a></div>
        <div style="float:right">次のページ <a href="buffer_peek.htm"><span class="notranslate">buffer_peek</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_tell
-->
  <!-- TAGS
buffer_tell
-->
</body>
</html>