<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>バッファライト</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_write" />
  <meta name="rh-index-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
  <meta name="search-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>バッファライト</h1>
  <p>この関数は、以前に作成した<span class="notranslate">buffer</span> にデータを書き込むために使用できます。書き込むデータは，この関数の引数 &quot;type &quot;と一致しなければならない。つまり，例えば<span class="notranslate">string</span> を符号なし16ビット整数として書き込もうとしてもダメである。データ型の定義には、以下の定数を使用することができます。</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Buffer_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_write.htm">バッファデータ型定数</a></span></th>
      </tr>
      <tr>
        <th>定数</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u8</span></td>
        <td>符号なし8ビット整数。0から255までの正の値です。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s8</span></td>
        <td>符号付き8ビット整数。128から127までの正または負の値（0は正として分類される）。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u16</span></td>
        <td>符号なし、16ビットの整数。0〜65,535の正の値です。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s16</span></td>
        <td>符号付き16ビット整数です。32,768～32,767の正または負の値（0は正として分類される）です。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u32</span></td>
        <td>符号なし32ビット整数。0から4,294,967,295までの正の値である。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s32</span></td>
        <td>符号付き32ビット整数。2,147,483,648 から 2,147,483,647 までの正または負の値（0は正として分類される）です。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u64</span></td>
        <td>64ビット符号なし整数。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f16</span></td>
        <td>16bit floatです。16ビット符号付き整数と同じ範囲の正または負の値である。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f32</span></td>
        <td>32bit float。32ビット符号付き整数と同じ範囲の正または負の値である。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f64</span></td>
        <td>64bitのフロート。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_bool</span></td>
        <td>ブーリアン値。1 または 0 (<span class="inline">true</span> または <span class="inline">false</span>) のどちらかのみです。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_string</span></td>
        <td><span class="notranslate">string</span> 任意の大きさの、ヌル終端文字で終端する。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_text</span></td>
        <td><span class="notranslate">string</span> 任意の大きさで、最後のヌル終端文字を含まないもの。</td>
      </tr>
    </tbody>
  </table>
  <p>この関数は、成功すれば0を、失敗すれば-1を返します。</p>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">buffer_write(buffer, type, value)</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th>
        <th>タイプ</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">バッファID</a></span></td>
        <td><span class="notranslate">The index of the buffer to write to.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">リアル</a></span></td>
        <td><span class="notranslate">The type of data that is to be written to the buffer (see the list of constants above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">value</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">リアル</a></span></td>
        <td><span class="notranslate">The data to write.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">Real</a></span> (0 if success, or -1 if it fails)</p>
  <p> </p>
  <h4>例</h4>
  <p class="code">buffer_seek(buff, buffer_seek_start, 0);<br />
    buffer_write(buff, buffer_s16, 0);<br />
    buffer_write(buff, buffer_s16, x);<br />
    buffer_write(buff, buffer_s16, y);</p>
  <p>上記のコードは、変数 &quot;buff &quot;に格納されたidを持つ<span class="notranslate">buffer</span> の開始点を見つけ、そこに一連の符号付き16ビット整数値を書き込んでいます。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る：<a href="Buffers.htm">バッファー</a></div>
        <div style="float:right">次のページ <a href="buffer_fill.htm"><span class="notranslate">buffer_fill</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_write
buffer_u8
buffer_s8
buffer_u16
buffer_s16
buffer_u32
buffer_s32
buffer_u64
buffer_f16
buffer_f32
buffer_f64
buffer_bool
buffer_string
buffer_text
-->
  <!-- TAGS
buffer_write
-->
</body>
</html>