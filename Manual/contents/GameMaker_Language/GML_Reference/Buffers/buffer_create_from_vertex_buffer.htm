<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>バッファークリエイト（頂点バッファーの作成</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_create_from_vertex_buffer" />
  <meta name="rh-index-keywords" content="buffer_create_from_vertex_buffer" />
  <meta name="search-keywords" content="buffer_create_from_vertex_buffer,buffer_fixed,buffer_grow,buffer_wrap,buffer_fast,buffer_vbuffer" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>バッファークリエイト（頂点バッファーの作成</h1>
  <p>この関数を使用して、事前に作成した<a href="../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">頂点バッファの</a>データで満たされたメモリの一部を、ゲーム内の<span class="notranslate">buffer</span> として確保します。この<i>バッファIDは</i>変数に格納され，以後，<span class="notranslate">buffer</span> に対するすべての関数呼び出しに使用されます． この関数は，使用する<span class="notranslate">vertex</span> <span class="notranslate">buffer</span> の ID を受け取ります（関数 <a href="../Drawing/Primitives/vertex_create_buffer.htm"><span class="inline">vertex_create_buffer()</span></a>例えば、以下の定数を用いて、<span class="notranslate">buffer</span> のタイプを定義します。</p>
  <table>
    <tbody>
      <tr>
        <th>定数</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_fixed</span></td>
        <td>サイズが固定されている<span class="notranslate">buffer</span> 。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_grow</span></td>
        <td>データが追加されると動的に「成長」する<span class="notranslate">buffer</span> </td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_wrap</span></td>
        <td><span class="notranslate">buffer</span> ここでデータは「ラップ」されます。追加されるデータが<span class="notranslate">buffer</span> サイズの限界に達すると、上書きは<span class="notranslate">buffer</span> の先頭に戻され、その時点からさらに書き込みが続けられる。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_fast</span></td>
        <td>特殊な &quot;stripped&quot;<span class="notranslate">buffer</span> で、読み書きが非常に高速になります。 <span class="inline">buffer_u8</span> <a href="buffer_write.htm">データ型でのみ</a>使用可能で、1 バイトアライメントで<i>なければ</i>ならない。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_vbuffer</span></td>
        <td>このタイプの<span class="notranslate">buffer</span> は、<span class="notranslate">vertex</span> <span class="notranslate">buffer</span> としてのみ使用されます。</td>
      </tr>
    </tbody>
  </table>
  <p><span class="notranslate">buffer</span> のタイプとは別に、<span class="notranslate">buffer</span> の<i>バイトアライメントを</i>設定する必要があります。この値は<span class="notranslate">buffer</span> に格納するデータによって異なりますが、ほとんどの場合、1 の値で完全に問題ありません。しかし、一部の操作では特定のアライメントが<i>必須</i>であり、誤ったアライメントを設定するとエラーが発生する可能性があることに注意してください（アライメントの詳細については、<a href="../../../Additional_Information/Guide_To_Using_Buffers.htm">バッファを</a>参照してください）。以下は、各データ型に最も適した値を示す一般的なガイドである（疑わしい場合は、1のアライメントを使用する）。</p>
  <ul class="colour">
    <li>文字列は1バイトにアラインしてください。</li>
    <li>符号付きまたは符号なしの8ビット整数は、どのような値にもアライメントできますが、高速な<span class="notranslate">buffer</span> ( <a href="buffer_write.htm"><span class="inline">buffer_write()</span></a>にアライメントさ<i>れなければ</i>ならない。</li>
    <li>符号付きまたは符号なしの16ビット整数は，2バイトにアラインすること。</li>
    <li>符号付きまたは符号なし32ビット整数は4バイトにアライメントすること</li>
    <li>16ビットまでのフロートは、2バイトにアライメントする必要があります。<i>(現在サポートされていません!)</i></li>
    <li>32ビットまでのフロートは4バイトにアライメントしてください。</li>
    <li>64ビットまでのフロートは8バイトにアライメントしてください。</li>
  </ul>
  <p class="note"><b>注：</b> <span class="notranslate">Vertex</span> <span class="notranslate">buffers</span> は1バイトアライメントですが、<span class="notranslate">buffer</span> のデータは単に生のメモリを<span class="notranslate">vertex</span> にコピーしたものなので、データの扱い方次第では、どのようなアライメントでも<span class="notranslate">buffer</span> を作成することが可能です。</p>
  <p class="note"><b>注</b>：このように動的に作成されたリソースは、メモリリークを防ぐために、不要になったらメモリから削除することが重要です。作成した<span class="notranslate">buffer</span> が終了したら、再度、以下を使用してリソースを解放してください。 <span style="font-size:1px;"><a href="buffer_delete.htm"><span class="inline">buffer_delete()</span></a></span>.また、新しい<span class="notranslate">vertex</span> を作成するために使用された<span class="notranslate">buffer</span> <span class="notranslate">buffer</span> もメモリから削除されないことに注意し、関数 <span style="font-size:1px;"><a href="../Drawing/Primitives/vertex_delete_buffer.htm"><span class="inline">vertex_delete_buffer()</span></a></span>が不要になった時点で</p>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">buffer_create_from_vertex_buffer(vertex_buffer, type, alignment)</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th>
        <th>タイプ</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate">vertex_buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer_Vertex">バーテックス<span class="notranslate">Buffer</span> ID</span></td>
        <td><span class="notranslate">The vertex buffer index to use.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Constant_Buffer_Type">バッファ型定数</span></td>
        <td><span class="notranslate">The type of buffer to create (see the constants list above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">alignment</span></td>
        <td><span data-keyref="Type_Real">リアル</span></td>
        <td><span class="notranslate">The byte alignment for the buffer</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_ID_Buffer">Buffer ID</span></p>
  <p> </p>
  <h4>例</h4>
  <p class="code">player_buffer = buffer_create_from_vertex_buffer(model_buffer, buffer_grow, 1);</p>
  <p>上記のコードは、<span class="notranslate">buffer</span> にメモリを割り当て、与えられた<span class="notranslate">vertex</span> <span class="notranslate">buffer</span> のデータをそこにコピーし、新しい<span class="notranslate">buffer</span> のインデックスを返し、それを変数 &quot;player_buffer&quot; に格納して、将来使用する。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る：<a href="Buffers.htm">バッファー</a></div>
        <div style="float:right">次のページ <a href="buffer_create_from_vertex_buffer_ext.htm"><span class="notranslate">buffer_create_from_vertex_buffer_ext</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_create_from_vertex_buffer
buffer_fixed
buffer_grow
buffer_wrap
buffer_fast
buffer_vbuffer
-->
  <!-- TAGS
buffer_create_from_vertex_buffer
-->
</body>
</html>