<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>external_define</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for external_define" />
  <meta name="rh-index-keywords" content="external_define,dll_cdecl,dll_stdcall,ty_real,ty_string" />
  <meta name="search-keywords" content="external_define,dll_cdecl,dll_stdcall,ty_real,ty_string" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>external_define</h1>
  <p>この関数は、特定のdll（<span class="notranslate">Windows</span> ）またはdylib（Mac用）に対する外部関数呼び出しを定義するために使用することができます。このファイルは、インクルード・ファイルでも<span class="notranslate">extension</span> の一部でもかまいません。</p>
  <p>ファイル名(および<span class="notranslate">path</span>)を指定し、次に定義したい関数の名前を指定します。次に、使用する呼び出し方法（以下の定数リストを参照）と、期待される結果の種類（これも定数です。）</p>
  <p>最後に、関数が受け取ることのできる引数の数（0から15まで）と、各引数の型も指定する必要があります。4つ以上の引数を持つ関数では，すべての引数が <span class="inline">ty_real</span> という型で<i>なければ</i>ならないことに注意してください．</p>
  <p class="note"><b>注意</b>：<span data-keyref="GameMaker Name">GameMaker</span> <span class="notranslate">IDE</span> に「Included Files」として追加された dll または dylib にのみ適用されます。<span class="notranslate">extensions</span> として追加されたファイルでは動作しません。これらのファイルは、<span class="notranslate">extension</span> パッケージ自体に関数を定義する必要があるからです。</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2">外部呼び出し型定数</th>
      </tr>
      <tr>
        <th>定数</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">dll_cdecl</span></td>
        <td>これは、デフォルトのC、C++の呼び出しです</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">dll_stdcall</span></td>
        <td>これは標準的なWinAPIコールです(<span class="notranslate">Windows</span> <span class="inline">dll</span> のみ)</td>
      </tr>
    </tbody>
  </table>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2">外部データ型定数</th>
      </tr>
      <tr>
        <th>定数</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">ty_real</span></td>
        <td>実数引数</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">ty_string</span></td>
        <td>ヌル文字で終端する<span class="notranslate">string</span> の引数</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">external_define(dll, name, calltype, restype, argnumb, argtype[0], argtype[1], ...argtype[10]);</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th>
        <th>タイプ</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate">dll</span></td>
        <td><span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">文字列</a></span></td>
        <td><span class="notranslate">The name of the DLL file (string)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">name</span></td>
        <td><span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">文字列</a></span></td>
        <td><span class="notranslate">The name of the function (string)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">calltype</span></td>
        <td><span data-keyref="Type_Constant_External_Call_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/OS_And_Compiler/external_define.htm">外部呼び出し型定数(dll_*)</a></span></td>
        <td><span class="notranslate">The calling convention used</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">restype</span></td>
        <td><span data-keyref="Type_Constant_External_Argument_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/OS_And_Compiler/external_define.htm">外部データ型定数(ty_*)</a></span></td>
        <td><span class="notranslate">The type of the result to expect</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">argnumb</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">リアル</a></span></td>
        <td><span class="notranslate">The number of arguments (0 - 10)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">argtype[0 ... 10]</span></td>
        <td><span data-keyref="Type_Constant_External_Argument_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/OS_And_Compiler/external_define.htm">外部データ型定数(ty_*)</a></span></td>
        <td><span class="notranslate">The types of the arguments being used</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Function_External"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/OS_And_Compiler/external_define.htm">External Function</a></span></p>
  <p> </p>
  <h4>例</h4>
  <p class="code">my_funcion = external_define(&quot;MyDLL.dll&quot;, &quot;MyMin&quot;, dll_cdecl, ty_real, 2, ty_real, ty_real);</p>
  <p>上記のサンプルコードでは、2つの引数を持つ「MyMin」という外部関数を定義しています。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="OS_And_Compiler.htm">OSとコンパイラ</a></div>
        <div style="float:right">次のページ <a href="external_call.htm"><span class="notranslate">external_call</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
external_define
dll_cdecl
dll_stdcall
ty_real
ty_string
-->
  <!-- TAGS
external_define
-->
</body>
</html>