<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>仮想キーと仮想キーボード</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for Virtual Keys And Virtual Keyboards" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Virtual Keys And Virtual Keyboards,Virtual Keyboard,Virtual Key" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>仮想キーと仮想キーボード</h1>
  <p><b></b>タッチスクリーンデバイス用のゲームを開発する場合、ユーザーからキーボード入力を得ることが重要になることがあります。<span data-keyref="GameMaker Name">GameMakerを</span>使用する場合、これは2つの方法のいずれかで行うことができます。</p>
  <ul class="colour">
    <li>画面上に独自の<b>仮想キーを</b>作成し、入力を得ることができる</li>
    <li>OSの<b>仮想キーボードを</b>ポップアップし、そこから入力を得ることができる</li>
  </ul>
  <p>何を使うかはゲームによって大きく異なりますが、一般的には、画面上にプレイヤーの操作ボタンやメニューが欲しいときは仮想キーを使い、名前を取得したり値を設定したりと、プレイヤーの入力が必要なときは仮想キーボードを使うことになると思います。</p>
  <p>タッチスクリーンを搭載したモバイルデバイスでゲームを正しく動作させるためには、ユーザーによってタッチされたときに特定の反応をするように画面の領域を割り当てることができるようにする必要がある場合があります。これは、内部的にマッピングされた標準的なキーボードキーに「仮想キー」を割り当て、それらが生成するキーボードイベントを使用してアプリケーションを制御することで実現されます。注目すべきは、これらの「仮想キー」は<span class="notranslate">room</span> の位置ではなく、<i>画面の</i>位置にマッピングされるため、ディスプレイサイズに基づいた x/y 値は絶対的なものであるということです。つまり、ビューの使用や相対的な<span class="notranslate">room</span> 座標を気にする必要がなく、単純に<span class="notranslate">object</span> の Create Event でキーを定義し（バーチャルキーは部屋ごとに一度だけ定義する必要があります）、<a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">Draw GUI Event</a> でキー<span class="notranslate">sprites</span> を描画し、GUI レイヤーをスクリーンと同じサイズにすることが可能です。</p>
  <p class="note"><b><span class="note">注意</span> </b><span class="notranslate">Windows</span>,<span class="notranslate">Ubuntu</span> (<span class="notranslate">Linux</span>) および MacOS, タッチスクリーンを使用するターゲットプラットフォームでは、マウスクリックを「タッチ」として受け取りますが、これらの機能は動作しません。</p>
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"> </span> これらの機能は、HTML5およびOpera GXのターゲットでサポートされています。</p>
  <p>利用可能な仮想キー機能は以下の通りです。</p>
  <ul class="colour">
    <li><a href="virtual_key_add.htm"><span class="notranslate">virtual_key_add</span></a></li>
    <li><a href="virtual_key_show.htm"><span class="notranslate">virtual_key_show</span></a></li>
    <li><a href="virtual_key_hide.htm"><span class="notranslate">virtual_key_hide</span></a></li>
    <li><a href="virtual_key_delete.htm"><span class="notranslate">virtual_key_delete</span></a></li>
  </ul>
  <p> </p>
  <p>タッチスクリーンデバイスのゲームでテキストや数字の入力が必要な場合、デバイスのOSキーボードを使用するために提供されている<b>仮想キーボード</b>関数を使用することができます。これらの関数は、OSキーボードを呼び出したり隠したりして入力を受け付けますが、通常のキーボードイベントは発生<i>せず</i>、ユーザー入力で変数 <span class="inline"><a href="../Keyboard_Input/keyboard_string.htm">keyboard_string</a></span> を更新します（これは、仮想キーボードが1文字だけでなく単語全体を入力できるためです）。</p>
  <p>仮想キーボードを開いたり閉じたりすると、<a href="../../../../The_Asset_Editors/Object_Properties/Async_Events.htm">システム非同期イベントが</a>発生し、その中で <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>DSマップには、以下のキーと値のペアが入力されます。</p>
  <ul class="colour">
    <li>「<b>event_type</b>&quot; - 受け取ったシステムイベントの種類で、仮想キーボードの場合は &quot;<b>virtual keyboard status</b>&quot; となります。</li>
    <li>&quot;<b>screen_height</b>&quot; - 仮想キーボードの高さ (ピクセル単位)。キーボードが見えない場合は、0 になります。</li>
    <li>&quot;<b>keyboard_status</b>&quot; - キーボードの現在のステータスで、以下の文字列のうちの1つとして返されます。
      <ul class="colour">
        <li>&quot;隠蔽&quot;</li>
        <li>&quot;非表示&quot;</li>
        <li>&quot;表示&quot;</li>
        <li>&quot;可視&quot;</li>
      </ul>
    </li>
  </ul>
  <p>利用可能な仮想キーボード機能は以下の通りです。</p>
  <p class="note"><b><span class="note">注意事項</span> </b>これらの機能は、<strong>Android</strong>（<strong>AndroidTVを</strong>含む）、<strong>iOS </strong>（<strong>tvOSを</strong>含む）、<strong>UWPの </strong>ターゲットプラットフォームに対してのみ有効です。</p>
  <ul class="colour">
    <li><a href="keyboard_virtual_show.htm"><span class="notranslate">keyboard_virtual_show</span></a></li>
    <li><a href="keyboard_virtual_hide.htm"><span class="notranslate">keyboard_virtual_hide</span></a></li>
    <li><a href="keyboard_virtual_status.htm"><span class="notranslate">keyboard_virtual_status</span></a></li>
    <li><a href="keyboard_virtual_height.htm"><span class="notranslate">keyboard_virtual_height</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="../Game_Input.htm">ゲーム入力</a></div>
        <div style="float:right">次へ<a href="../Keyboard_Input/Keyboard_Input.htm">キーボード入力</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Virtual Keys
Virtual Keyboards
Virtual Keys And Keyboards
-->
  <!-- TAGS
virtual_key_functions
-->
</body>
</html>