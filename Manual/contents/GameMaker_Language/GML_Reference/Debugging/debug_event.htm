<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>デバッグイベント</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for debug_event" />
  <meta name="rh-index-keywords" content="debug_event" />
  <meta name="search-keywords" content="debug_event" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>デバッグイベント</h1>
  <p>この関数は、ゲームが<a href="../../../Introduction/Debugging.htm">デバッグモードで</a>実行されているときに、<span class="notranslate">debugger</span> のグラフビューに表示されるカスタムデバッグイベントを生成します。デバッグモードで<i>ない</i>ときにメッセージを表示させたい場合は、以下のようにします。 <a href="show_debug_message.htm"><span class="inline">show_debug_message()</span></a>.</p>
  <p>また，この関数は，<span class="notranslate">strings</span> のような外部アプリケーションを使用した<span class="notranslate">debugging</span> の実行を助けるために，2つの予約済み<span class="notranslate">Visual Studio</span> を取ります．これらの<span class="notranslate">strings</span> 。</p>
  <ul class="colour">
    <li>&quot;<span class="inline">OutputDebugOn</span>&quot; -<b>Windows</b>ターゲットの <span class="inline">OutputDebugString</span> への呼び出しを有効にします。これは、すべてのデバッグ出力 (Output ウィンドウに表示されるすべて) を<span class="notranslate">Visual Studio</span> またはサードパーティアプリケーションで表示できるようにすることを意味します。</li>
    <li>&quot;<span class="inline">OutputDebugOff</span>&quot; - 前述の動作を無効にします。</li>
    <li>&quot;<span class="inline">BreakOnError</span>&quot; - このオプションは<b>Windows YYC</b>ビルド専用で、<span class="notranslate">runtime</span> がエラーを検出した場合、プロジェクトは通常のコードエラー画面を表示<i>せず</i>、そのまま続行しクラッシュすることを意味します。<span class="notranslate">Visual Studio</span>これにより、<span class="notranslate">debugging</span> 内のスタックトレースを見ることができます。</li>
    <li>&quot;<span class="inline">ResourceCounts</span>&quot; - データ構造、タイムソース、サーフェスなど、現在アクティブなリソースをすべてリストアップします。</li>
    <li>&quot;<span class="inline">DumpMemory</span>&quot; - 現在のメモリ使用量に関する情報を表示します。</li>
  </ul>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">debug_event(string)</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th>
        <th>タイプ</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate">string</span></td>
        <td><span data-keyref="Type_String"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">文字列</a></span></td>
        <td><span class="notranslate">The custom debug event string to use.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4><b>例</b></h4>
  <p class="code">if !surface_exists(global.EffectsSurface)<br />
    {<br />
        debug_event(&quot;Recreating Effects Surface&quot;);<br />
        global.EffectsSurface = surface_create(room_width, room_height);<br />
    }</p>
  <p>上記のコードは、サーフェイスが存在するかどうかをチェックし、存在しない場合は、<span class="notranslate">debugger</span> のグラフビューでデバッグイベントが発生し（これが見えるようにするには、ゲームをデバッグモードで実行する必要があります）、サーフェイスが再作成されます。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="Debugging.htm">デバッギング</a></div>
        <div style="float:right">次のページ <a href="debug_get_callstack.htm"><span class="notranslate">debug_get_callstack</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
debug_event
-->
  <!-- TAGS
debug_event
-->
</body>
</html>