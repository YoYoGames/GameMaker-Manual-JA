<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_zwriteenable</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_set_zwriteenable" />
  <meta name="rh-index-keywords" content="gpu_set_zwriteenable" />
  <meta name="search-keywords" content="gpu_set_zwriteenable" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_set_zwriteenable</h1>
  <p>この関数は、z-buffer を使用した深度順序のオン (<span class="inline">true</span>) とオフ (<span class="inline">false</span>) を切り替えるために使用します。<span data-keyref="GameMaker Name">GameMaker</span>でインスタンスがレンダリングされると、生成されたピクセルの深度 (その z 座標) が z バッファに保存されます。その後、同じピクセルでシーンの別のインスタンスをレンダリングする必要がある場合、2 つの深度を比較します (z-testing - see the same pixel)。 <a href="gpu_set_ztestenable.htm"><span class="inline">gpu_set_ztestenable()</span></a>観察者に &quot;近い &quot;方がz-bufferに保存され、古い方と入れ替わります。しかし、これは常に望むことではなく、z 値が何であれ、何かを他のものの上に描画したい場合があります。そのような場合、この関数を使用して<span class="notranslate">switch</span> z-buffer への書き込みを停止し、描画されるものが他のすべての上に描画されるように強制することができます。ここで説明されているのは、<i>デフォルトの</i>z-testing 比較モードに対するものですが、これは変更することができます。</p>
  <p>初期値は、z-bufferingが有効（<span class="inline">true</span> ）になっています。</p>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">gpu_set_zwriteenable(enable);</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th><th>タイプ</th>
        <th>商品説明</th>
     </tr>
      <tr>
        <td><span class="notranslate">enable</span></td><td><span data-keyref="Type_Bool"></span></td>
        <td><span class="notranslate">The comparison mode to use (see list above)</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>例</h4>
  <p class="code">gpu_set_zwriteenable(false);<br />
    with (obj_Menu_Containers)<br />
    {<br />
        draw_self();<br />
    }<br />
    gpu_set_zwriteenable(true);</p>
  <p>上記のコードでは、z-bufferの書き込みをオフにして、<span class="notranslate">objects</span> をいくつか描画した後、再びオンにして描画を続けています。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="GPU_Control.htm">GPU制御</a></div>
        <div style="float:right">次のページ <a href="gpu_set_fog.htm"><span class="notranslate">gpu_set_fog</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_zwriteenable
-->
  <!-- TAGS
gpu_set_zwriteenable
-->
</body>
</html>