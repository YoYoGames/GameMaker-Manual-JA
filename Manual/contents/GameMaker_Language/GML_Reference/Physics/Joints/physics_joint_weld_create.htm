<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理接合部溶接の作成</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_weld_create" />
  <meta name="rh-index-keywords" content="physics_joint_weld_create" />
  <meta name="search-keywords" content="physics_joint_weld_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>物理接合部溶接の作成</h1>
  <p>ウェルドジョイントは、2つの冶具を強固に、かつ柔軟に結合させるために設計されています。ウェルド・ジョイントは、接合された2つのフィクスチャー間のフレックスを許容しますが、例えばディスタンス・ジョイントのような伸縮はなく、ストレスや負荷がかかると常に基準角度に「スプリング」バックしようとします。下の図に示すように、<span class="notranslate">room</span> でジョイントを作成する箇所と、ジョイントが常に維持しようとする角度を定義します。</p>
  <p><img> <span class="notranslate">room</span> 特に、インスタンスを<span class="notranslate">room</span> に配置するのではなく、ジョイントと同時に<span class="notranslate">room</span> エディタで作成する場合は、アンカーポイントを定義する際に注意する必要があります。また、ジョイントはインスタンスの<span class="notranslate">sprite</span> のサイズや、インスタンスが接続しているフィクスチャとは無関係に作成されることも知っておく必要があります。ですから、インスタンスの原点以外の場所に溶接ジョイントを作成しても、それはまだ有効で、作成された位置から相対的に2つのインスタンスを拘束することになります。</p>
  <p>溶接ジョイントは柔軟性があり、何らかのストレスがかかると曲がったり屈曲したりするので、ジョイントの振動周波数（Hz）とダンピング比を設定して、さまざまな効果を得ることができます。</p>
  <p>col」の値を <span class="inline">true</span> に設定すると、2つのインスタンスは相互作用して衝突することができますが、衝突イベントがある<i>場合のみ</i>です。しかし、 <span class="inline">false</span> に設定すると、何があっても衝突することはありません。</p>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">physics_joint_weld_create(inst1, inst2, anchor_x, anchor_y, ref_angle, freq_hz, damping_ratio, col)</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th>
        <th>タイプ</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance">インスタンスID</span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance">インスタンスID</span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">anchor_x</span></td>
        <td><span data-keyref="Type_Real">リアル</span></td>
        <td><span class="notranslate">The x coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">anchor_y</span></td>
        <td><span data-keyref="Type_Real">リアル</span></td>
        <td><span class="notranslate">The y coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ref_angle</span></td>
        <td><span data-keyref="Type_Real">リアル</span></td>
        <td><span class="notranslate">The joint angle to maintain</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">freq_hz</span></td>
        <td><span data-keyref="Type_Real">リアル</span></td>
        <td><span class="notranslate">This is the oscillation frequency for the joint, in hertz</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">damping_ratio</span></td>
        <td><span data-keyref="Type_Real">リアル</span></td>
        <td><span class="notranslate">This damping ratio for the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">col</span></td>
        <td><span data-keyref="Type_Bool">ブーリアン</span></td>
        <td><span class="notranslate">Whether the two instances can collide (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint">Physics Joint ID</span></p>
  <p> </p>
  <h4>例</h4>
  <p class="code">var i, fix, o_id, p_id;<br />
    p_id = noone;<br />
    o_id = noone;<br />
    fix = physics_fixture_create();<br />
    physics_fixture_set_box_shape(fix, 64, 32);<br />
    for (i = 0; i &lt; 5; i++;)<br />
    {<br />
        o_id = instance_create_layer(x + (128 * i), y, &quot;Instances&quot;, obj_BridgePart);<br />
        physics_fixture_bind(fix, o_id);<br />
        if (i &gt; 0 &amp;&amp; i &lt; 4) <br />
        {<br />
            physics_joint_weld_create(p_id, o_id, x + (128 * i) - 64, y, 0, 10, 12, true);<br />
        }<br />
        p_id = o_id;<br />
    }<br />
    physics-fixture_delete(fix);</p>
  <p>上記のコードでは、フィクスチャを作成し、<span class="notranslate">loop</span> を使っていくつかのインスタンスを作成し、フィクスチャをそれぞれの新しいインスタンスにバインドし、溶接ジョイントを使ってそれらをすべて結合しています。最後に、フィクスチャはメモリから削除されます。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背中<a href="Joints.htm">関節</a></div>
        <div style="float:right">次のページ <a href="physics_joint_friction_create.htm"><span class="notranslate">physics_joint_friction_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_weld_create
-->
  <!-- TAGS
physics_joint_weld_create
-->
</body>
</html>