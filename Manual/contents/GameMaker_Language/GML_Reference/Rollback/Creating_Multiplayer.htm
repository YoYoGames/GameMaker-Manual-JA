<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>マルチプレイヤーゲームを作る</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Follow this tutorial to make your first multiplayer game" />
  <meta name="template" content="../../../assets/masterpages/Manual_Page.htt" />
  <meta name="condition-tags" content="Export:Beta" />
</head>
<body>
  <h1>マルチプレイヤーゲームを作る</h1>
  <p class="note">このページでは、初めてマルチプレイヤーゲームを作成するための詳細な手順を説明します。<br>
    <br>
    ロールバックシステムについては、<a data-xref="{title}" href="Rollback_System.htm">ロールバックシステムを</a>お読みください。<br>
    <br>
    Rollbackの全機能の詳細については、「<a data-xref="{title}" href="Rollback_Functions/Rollback_Functions.htm">Rollback Functions</a>」をお読みください。
  </p>
  <h2>プロジェクトセットアップ</h2>
  <p>新しいプロジェクトを開始し、プレーヤー用の<span class="notranslate">sprite</span> を作成します<span class="notranslate">object</span> 。画像をインポートすることも、塗りつぶした正方形を作成することもできます。</p>
  <p>2つのオブジェクトを作成します。</p>
  <ul class="colour">
    <li><strong>obj_game</strong>です。マルチプレイヤーゲームを管理します。</li>
    <li><strong>obj_player</strong>。これはあなたの実際のプレーヤーになります<span class="notranslate">object</span> 。接続された各プレイヤーは、この<span class="notranslate">object</span> のインスタンスを持ち、コントロールすることができます。<br>
      <br>
      プレーヤー<span class="notranslate">sprite</span> をプレーヤー<span class="notranslate">object</span> に割り当てます。
    </li>
  </ul>
  <p><img class="center_shadow" height="220" src="../../../assets/Images/Scripting_Reference/GML/Reference/Rollback/rollback_assets.png" width="196" /></p>
  <p>先に進み、<strong>obj_game</strong>を<span class="notranslate">room</span> に配置します。<strong>obj_player</strong> は自動的に作成されますので、配置<strong>しないで</strong>ください。</p>
  <h2>ゲームを始める</h2>
  <p><strong>obj_game</strong> に Create イベントを追加し、その中に以下のコードを記述します。</p>
  <p class="note"><span class="note">注</span> <span class="notranslate">GML</span> Visual を使用している場合は、対応する<a href="../../../Drag_And_Drop/Drag_And_Drop_Reference/Rollback/Rollback_Actions.htm">ロールバックアクションを</a>使用します。</p>
  <p class="code">rollback_define_player(obj_player);<br />
    <br />
    var _joined = rollback_join_game();<br />
    <br />
    if (!_joined)<br />
    {<br />
        rollback_create_game(2);<br />
    }
  </p>
  <p>まず、使用するプレイヤー<span class="notranslate">object</span> を定義し、以下の方法でゲームに参加しようとします。 <a href="Rollback_Functions/rollback_join_game.htm"><span class="inline">rollback_join_game()</span></a>.この関数は、システムが参加するゲームを見つけた場合(正しいURLにいることを意味する)、 <span class="inline">true</span> を返します。</p>
  <p>ゲームに参加できなかった場合は、 <span class="inline">false</span> を返します。返された値が <span class="inline">false</span> である場合、我々は <a href="Rollback_Functions/rollback_create_game.htm"><span class="inline">rollback_create_game()</span></a>を呼び出して、自分たちのゲームを主催します。そこで、このゲームでは最大2人のプレイヤーを許可するように指定しています。</p>
  <p class="note"><span class="note">注</span>）現時点では、最大4人までのゲームしか作成できません。</p>
  <p>上記のコードでは、<span class="notranslate">room</span> の左上隅に<strong>obj_player</strong>のインスタンスが 2 つ作成されますが、これらはまだ制御可能な状態にはなっていません。</p>
  <p><img class="center_shadow" height="335" src="../../../assets/Images/Scripting_Reference/GML/Reference/Rollback/rollback_player_spawned.png" width="447" /></p>
  <h2>ムービングプレーヤー</h2>
  <p>入力はロールバックシステムで管理され、プレイヤー間で自動的に同期されます。</p>
  <p>プレーヤーで<span class="notranslate">object</span>, <span class="inline"><a href="Rollback_Functions/rollback_get_input.htm">rollback_get_input()</a></span> を呼び出して、すべてのデフォルト入力を含む<span class="notranslate">struct</span> を取得します。</p>
  <p class="note"><span class="inline"><strong>left</strong>, <strong>right</strong>, <strong>up</strong>, <strong>down</strong>, <strong>Z</strong>, <strong>X</strong>, <strong>C</strong>, <strong>space</strong></span><br>
    <br>
    <em>これらは、キーが保持されているかどうかを示す。</em> <span class="inline">*<strong>_pressed</strong></span> <em>と </em><span class="inline">*<strong>_released</strong></span> <em>のバリアントも用意されています。</em>
  </p>
  <p>独自の入力を定義するには、「<a data-xref="{title}" href="Defining_Inputs.htm">入力を定義する</a>」を参照してください。</p>
  <p>次に、Create イベントと Step イベントで次のコードを使用してプレーヤーをセットアップします。</p>
  <p class="code">// Create Event<br />
    move_speed = 5;<br />
    <br />
    // Step Event<br />
    var _input = rollback_get_input();<br />
    <br />
    if (_input.left) x -= move_speed;<br />
    if (_input.right) x += move_speed;<br />
    if (_input.up) y -= move_speed;<br />
    if (_input.down) y += move_speed;
  </p>
  <p>これは、プレイヤーの速度を変数に設定し、Stepイベントで、入力<span class="notranslate">struct</span> を取得します。</p>
  <p>例えば、左を押すとXが縮小し、上を押すとYが縮小するというように、押された各矢印キーに基づき、対応する軸でインスタンスを移動させるのです。</p>
  <h2>プレイヤーロケーション</h2>
  <p>テストする前に、<span class="notranslate">room</span> の左上隅にスポーンするのではなく、特定の場所にプレーヤーが作成されることを確認しましょう。</p>
  <p>プレーヤーのCreateイベント<span class="notranslate">object</span> に、こう書いてください。</p>
  <p class="code">if (player_id == 0)<br />
    {<br />
        x = 300;<br />
    }<br />
    else if (player_id == 1)<br />
    {<br />
        x = room_width - 300;<br />
    }<br />
    <br />
    y = room_height / 2;
  </p>
  <p><span class="inline"><a data-xref="{title}" href="Rollback_Variables/player_id.htm">player_id</a></span> は、プレイヤーインスタンスのIDを格納する組み込みインスタンス変数です。</p>
  <p>このゲームは2人プレイなので、最初のプレイヤーのIDは<strong>0</strong>、2番目のプレイヤーのIDは<strong>1</strong>です。</p>
  <p>それを元に、プレイヤーの初期X位置を変えています。Y位置はどちらも同じです。</p>
  <p>ゲームを起動すると、両方のプレイヤーが表示され、最初のプレイヤーを操作することができます。</p>
  <p><video class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Rollback/rollback_two_players_synctest.mp4" width="856" height="420" controls="" align="center"></video></p>
  <p>2人目のプレイヤーが勝手に不規則な動きをしていますが、これはロールバックシステムの機能です。これはロールバックシステムの特徴で、定義されたすべての入力に対して、毎フレーム自動的にランダムな値を提供し、ゲームの基本的なテストとして使用できます。</p>
  <p>を呼び出すことで、自動的なランダム移動を無効にすることができます。 <a href="Rollback_Functions/rollback_use_random_input.htm"><span class="inline">rollback_use_random_input(false)</span></a>または、他のプレイヤーのために<a href="Defining_Inputs.htm#h1">独自の「模擬」入力を設定</a>することができます。</p>
  <h2>オンライン接続</h2>
  <p>基本的なマルチプレイの例が完成し、インターネットに接続する準備が整いました。</p>
  <p>デフォルトでは、システムは<strong>Sync Test</strong>モードで起動します。これはオフラインでゲームをテストする方法です。オンライン機能を有効にするには、 <span class="inline"><a href="Rollback_Functions/rollback_create_game.htm">rollback_create_game()</a></span> の第2引数を <span class="inline">false</span> に設定する必要があります（これは Sync Test を無効にします）。</p>
  <p>デフォルトの領域も設定する必要があり、これは第3引数である。参照。<a data-xref="{text}" href="Rollback_Functions/rollback_create_game.htm#h">地域名の取得</a></p>
  <p class="code">// obj_game: Create event<br />
    rollback_define_player(obj_player);<br />
    <br />
    var _joined = rollback_join_game();<br />
    <br />
    if (!_joined)<br />
    {<br />
        rollback_create_game(2, false, &quot;Europe&quot;); // &lt;- disable Sync Test, set default region<br />
    }
  </p>
  <p>Opera GXブラウザで、<a href="https://gx.games">GX.gamesに</a>サインインしてください。</p>
  <p><strong>Opera GX</strong>ターゲットでゲームを実行します。ロールバックシステムが始まると、新しい「部屋」が作られます。<span class="notranslate">GameMaker</span> <span class="notranslate">room</span> <span class="notranslate">asset</span> ではなく、プレイヤーが一緒にプレイする<strong>仮想の部屋</strong>です。</p>
  <h2>プレイヤーを招待する</h2>
  <p>ゲームが開始されても、すぐにプレイヤーインスタンスが表示されるわけではありません。その代わり、システムはすべてのプレイヤーが参加するのを待ってからゲームを開始します。</p>
  <p class="note"><span class="tip">ヒント</span>プレイヤーが参加する前にゲームを開始するには、次のように呼び出します。 <a href="Rollback_Functions/rollback_start_game.htm"><span class="inline">rollback_start_game()</span></a>.を呼び出すと <a href="Rollback_Functions/rollback_use_manual_start.htm"><span class="inline">rollback_use_manual_start()</span></a>を呼び出すと、すべてのプレーヤーが参加した後でも、手動でゲームを開始するのを待ちます。</p>
  <p>待っている間、ゲームの下に「<strong>Copy Share Url</strong>」ボタンが表示されます。ボタンが表示されていない場合は、下にスクロールしてください。</p>
  <p><img>このリンクは、別のブラウザに貼り付けて、2人目のプレイヤーとして参加することができます。</p>
  <p>両方のウィンドウを同時に表示させないと、ウィンドウが隠れているプレイヤーがタイムアウトしてしまい、ゲームが終了してしまいます。</p>
  <p>両方のゲームインスタンスが接続され、同期されると、それぞれのブラウザウィンドウから各プレイヤーを操作できるようになります。</p>
  <p><img>ドラッグしてサイズを変更すれば、両方のウィンドウを並べて開くことができます。</p>
  <p>テスト中は、ゲームの左上にデバッグメッセージが表示され、ゲームの状態に関する情報が提供されます。これを無効にするには、 <span class="inline"><a href="Rollback_Functions/rollback_display_events.htm">rollback_display_events(false)</a></span> を呼び出します。</p>
  <h2 id="h">退室</h2>
  <p>コール <a href="Rollback_Functions/rollback_leave_game.htm"><span class="inline">rollback_leave_game()</span></a>を使って、プレーヤーを退場させることができます。<span class="notranslate">room</span> 。詳しい使い方は、<a href="Rollback_Functions/rollback_leave_game.htm">機能のページを</a>ご覧ください。</p>
  <h2>ゲームロジック</h2>
  <p>を使用している限り、すべてのプレイヤーが参加したときに、ロールバックシステムが自動的にプレイヤーインスタンスを作成します。 <a href="Rollback_Functions/rollback_define_player.htm"><span class="inline">rollback_define_player()</span></a>.</p>
  <p>ただし、ゲーム開始前に他のコードを実行することは可能です。つまり、コアとなるゲームロジックを開始するのは、すべてのプレイヤーが参加した後にするように注意しなければなりません。</p>
  <p>例えば、アラームを使用して敵のインスタンスを生成している場合、<a data-xref="{text}" href="Rollback_Events.htm#h">Rollback Start</a>イベントがトリガーされたときにのみ、そのアラームを開始するようにします。</p>
  <h2>主なイベント</h2>
  <p>プレイヤーが勝利してレベルを終了するような、ゲーム内の主要なイベントは、すべてのプレイヤーが同期しているときに行う必要があります。そうでないと、間違った予測によって間違ってプレイヤーを勝利させてしまい、最終的にロールバックしたときに奇妙に見えてしまうかもしれません。</p>
  <p>これを正しく行うには、 <span class="inline"><a href="Rollback_Functions/rollback_sync_on_frame.htm">rollback_sync_on_frame()</a></span> の例を参照してください。</p>
  <h2>参考文献</h2>
  <p>初めてのマルチプレイが完成しました</p>
  <p>ロールバックシステムについては、以下のページをご覧ください。</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="Rollback_System.htm">ロールバック方式</a></li>
    <li><a data-xref="{title}" href="Defining_Inputs.htm">入力の定義</a></li>
    <li><a data-xref="{title}" href="Rollback_Constraints.htm">ロールバックコンストレイント</a></li>
    <li><a data-xref="{title}" href="Rollback_Events.htm">ロールバックイベント</a></li>
    <li><a data-xref="{title}" href="Rollback_Preferences.htm">プレイヤー環境設定</a></li>
  </ul>
  <p>を使って、ゲームにチャットを追加することができます。 <a href="Rollback_Functions/rollback_chat.htm"><span class="inline">rollback_chat()</span></a>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>戻る<a data-xref="{title}" href="Rollback_Multiplayer.htm">ロールバックマルチプレイ</a></div>
        <div>次へ<a data-xref="{title}" href="Rollback_System.htm">ロールバックシステム</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
</body>
</html>