<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>プレイヤーID</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="template" content="../../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="condition-tags" content="Export:Beta" />
  <meta name="rh-index-keywords" content="player_id" />
  <meta name="search-keywords" content="player_id" />
</head>
<body>
  <h1>プレイヤーID</h1>
  <p>を使用してプレーヤーを定義すると、システムは自動的にそのインスタンスを作成します。 <a href="../Rollback_Functions/rollback_define_player.htm"><span class="inline">rollback_define_player()</span></a>を使用してプレーヤー<span class="notranslate">object</span> を定義すると、システムは自動的に各プレーヤーにその<span class="notranslate">object</span> のインスタンスを作成します。その<span class="notranslate">object</span> の各インスタンスは、そのプレーヤーのIDを格納する <span class="inline">player_id</span> 変数を取得します。</p>
  <p>このIDは0から始まり、最初はホスト自身である。1から上のプレイヤーは、ゲームに参加した「ピア」です。</p>
  <p> <span class="inline">rollback_define_player()</span> を使用しない場合、この変数は<span class="notranslate">objects</span> のいずれに対しても作成されません。その場合、「プレイヤー<a data-xref="{text}" href="../Rollback_System.htm#h1">オブジェクトの定義</a>」で説明するように、プレイヤー インスタンスとその ID を手動で管理する必要があります。</p>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">player_id;</p>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></p>
  <p> </p>
  <h4>例</h4>
  <p class="code">// Create event<br />
    if (player_id == 0)<br />
    {<br />
        x = 300;<br />
    }<br />
    else if (player_id == 1)<br />
    {<br />
        x = 500;<br />
    }</p>
  <p>上記のコードでは、プレイヤーインスタンスのIDに基づいてX位置を変更しています。</p>
  <p>また、このIDを配列のインデックスとして使用することで、例えば全選手のスコアを格納することも可能です。</p>
  <p class="code">// Step event<br />
    var _coin = instance_place(x, y, obj_coin);<br />
    if (_coin != noone)<br />
    {<br />
        obj_game.scores[player_id]++;<br />
        instance_destroy(_coin);<br />
    }<br />
    <br />
    // Draw event<br />
    var _my_score = obj_game.scores[player_id];<br />
    draw_text(x, y, _my_score);
  </p>
  <p>上記のStepイベントコードは、コインと衝突すると、<span class="inline2">obj_gameの</span>配列にあるプレイヤーのスコアが増加します。その後、そのコインのインスタンスは破棄されます。</p>
  <p>上記のDrawイベントのコードは、同じ配列からプレイヤーのスコアを取得し、その値を描画しています。</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>戻る<a data-xref="{title}" href="Rollback_Variables.htm">ロールバック変数</a></div>
        <div>次ページ：<a data-xref="{title}" href="player_local.htm">プレイヤー_ローカル</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
player_id
-->
  <!-- TAGS
player_id
-->
</body>
</html>