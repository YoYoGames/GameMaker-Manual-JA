<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_post_string。</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_post_string" />
  <meta name="rh-index-keywords" content="http_post_string" />
  <meta name="search-keywords" content="http_post_string" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_post_string。</h1>
  <p>コンピュータでは、ファイルのアップロードや入力済みフォームの送信など、クライアントが検索要求の一部として<span class="notranslate">server</span> にデータを送信する必要がある場合に<b>ポスト</b>リクエストを使用するが、<span data-keyref="GameMaker Name">GameMaker</span> でもこの機能は同じである。 <span class="inline"><a href="http_get.htm">http_get()</a></span> のリクエスト方式では、URL のみが<span class="notranslate">server</span> に送られるのに対し、 <span class="inline">http_post_string()</span> では<span class="notranslate">string</span> に送られる<span class="notranslate">server</span> も含まれ、結果として新規リソースの作成、既存リソースの 更新、またはその両方を行うことができる。なお、この機能を使用する場合、HTTPリクエストパラメータ(Webページのフォームを送信する際にURLの末尾に「付加」されるビット)も完全に許容範囲内であることに注意してください。</p>
  <p class="note"><b><span class="note">注意事項</span> </b>ブラウザのXSS保護機能により、ドメインをまたがるリソースへのリクエストや読み込み試行がブロックされ、空白の結果が返されるように見える場合があることに留意してください。詳しくは、「<a href="HTTP.htm">クロスドメインの問題</a>」をご覧ください。</p>
  <p>このイベントは、任意の<a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">HTTPイベントによって</a>ピックアップされる「コールバック」を生成し、その場合、このイベント専用の<a href="../../Data_Structures/DS_Maps/DS_Maps.htm">DSマップ</a>（より一般的には「辞書」として知られている）を生成し、特別な変数に格納されます <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>非同期ロード</b></a>.このDSマップは、返されるデータがあるかないかによって異なる値を含む。たとえば、ファイルを要求した場合、データのパケットを受信するたびにイベントが複数回トリガーされるので、たとえばプログレスバーを表示することができます。DSマップの一般的な構造は、以下のようになります。</p>
  <ul class="colour">
    <li><b>idを指定します。 </b>コマンドから返されたID。もし <span class="inline">http_</span> のリクエストを連続して発行した場合、どのリクエストに対する返答なのかを知る必要があります。そのため、この値を使って、最初にリクエストを送ったときに保存した値と比較し、正しいものを探します。</li>
    <li><b>のステータスを表示します。 </b>エラーなら0未満、完了なら0、パケット受信なら1の値を返す（詳細は後述）。</li>
    <li><b>の結果が表示されます。 </b>受信したデータ（<span class="notranslate">string</span> のみ）。</li>
    <li><b>url:要 </b>求された完全なURL。</li>
    <li><b>http_status。 </b>生の http ステータスコード (利用可能な場合)。例えば 304 は &quot;Not Modified&quot;、204 は &quot;No Content&quot; などです。</li>
  </ul>
  <p>ゲームに返されるパケットが複数ある場合、コールバックの「status」キーは1を返し、その場合、DSマップは以下の追加キーを持つことになります。</p>
  <ul class="colour">
    <li><b>&quot;contentLength &quot;を指定します。 </b>これは、ウェブ<span class="notranslate">server</span> が受信を期待すべきと言ったファイルのサイズです (<span class="notranslate">server</span> がこのデータを返さない場合は -1 になる可能性があります)。</li>
    <li><b>&quot;sizeDownloaded&quot;。 </b>すでにダウンロードしたデータのサイズ。</li>
  </ul>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">http_post_string(url, string);</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th><th>タイプ</th>
        <th>商品説明</th>
     </tr>
      <tr>
        <td><span class="notranslate">url</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The web address of the server that you wish to get information from</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The string you wish to send to the specified URL</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>拡張された例。</h4>
  <p> <span class="inline">http_post_string()</span> 関数は任意のイベントから呼び出すことができます。非同期なので、コールバックはほとんど即座に行われることもあれば、数秒かかることもあります。この関数を呼び出すのは簡単で、次のようになります。</p>
  <p class="code">var str = &quot;name=&quot; + global.player_name + &quot;&amp;score=&quot; + string(global.player_score);<br />
    post = http_post_string(&quot;http://www.angusgames.com/game?game_id=&quot; + string(global.game_id), str);</p>
  <p>上記のコードでは、指定されたURLに指定されたパラメータで検索リクエストを送信し、変数strに格納されている追加データ（URLエンコード形式のプレーヤー名とスコア）を送信しています。コールバックを受信すると、定義されたすべての非同期<b>Http イベントが</b>トリガーされます。返された「id」を変数 <span class="inline">post</span> に格納されているものと照らし合わせて、さまざまな <span class="inline">http_post_string()</span> 関数を使用している場合に正しいコードを実行しているかどうか確認することができます。次のサンプルコードは、この方法を示しています。</p>
  <p class="code">var r_str = &quot;null&quot;;<br />
    if (ds_map_find_value(async_load, &quot;id&quot;) == post) <br />
    {<br />
        if (ds_map_find_value(async_load, &quot;status&quot;) == 0)<br />
        {<br />
            _r_str = ds_map_find_value(async_load, &quot;result&quot;);<br />
        }<br />
    }</p>
  <p>上記のコードでは、まず作成されたDSマップのidをチェックし、次にコールバックのステータスをチェックします。値が 0 の場合（成功を意味する）、コールバックの結果は今後使用する変数に格納され、それ以外の場合は単にデフォルト値（この場合は &quot;null&quot;）が格納されるだけである。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る：<a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">次のページ <a href="http_get_request_crossorigin.htm"><span class="notranslate">http_get_request_crossorigin</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
http_post_string
-->
  <!-- TAGS
http_post_string
-->
</body>
</html>