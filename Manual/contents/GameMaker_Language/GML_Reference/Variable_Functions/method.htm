<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>方法</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function method" />
  <meta name="rh-index-keywords" content="method" />
  <meta name="search-keywords" content="method" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>方法</h1>
  <p>この関数を使うと、既存の関数（またはメソッド）を与えられたインスタンスまたは<span class="notranslate">struct</span> にバインドして、後で使用できる新しい<a href="../../GML_Overview/Method_Variables.htm">メソッド変数を</a>作成することができます。</p>
  <p>使用するインスタンスID（<span class="notranslate">room</span> でアクティブなインスタンスで、<span class="notranslate">object</span> のインデックスではない）または<span class="notranslate">struct</span> の参照と、バインドしたい関数ID（またはメソッド参照）を指定します。この関数は、割り当てられた変数から呼び出すことができる新しい<a class="glossterm" data-glossterm="方法" href="#">メソッドを</a>返します（以下のコード例を参照してください）。</p>
  <p>返されたメソッドは、指定されたインスタンスまたは<span class="notranslate">struct</span> に「バインド」されます。これは、常にそのインスタンス/構造体のスコープで実行されることを意味します。</p>
  <p>ユーザー定義の関数/メソッドだけでなく、組み込み関数もバインドできます。また、インスタンス/構造体の引数として <span class="inline">undefined</span> を指定すると、現在の <a href="../../GML_Overview/Instance_Keywords.htm"><span class="inline">self</span></a>スコープがバインディングに使用されます。</p>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">method(struct_ref_or_instance_id, func);</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th>
        <th>タイプ</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate">struct_ref_or_instance_id</span></td>
        <td><span data-keyref="Type_Struct">構造体</span>または<span data-keyref="Type_ID_Instance">インスタンスID</span></td>
        <td><span class="notranslate">The unique reference or ID value of the struct or instance to use (can be <span class="inline">self</span> または ) <span class="inline">undefined</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">func</span></td>
        <td><span data-keyref="Type_Function_Script">スクリプトの関数</span>または<span data-keyref="Type_Method">メソッド</span></td>
        <td><span class="notranslate">The ID of the function (or method reference) to use</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Method">Method</span></p>
  <p> </p>
  <h4>例</h4>
  <p class="code">var _inst = instance_position(mouse_x, mouse_y, obj_Enemy);<br />
    if (instance_exists(_inst)) <br />
    {<br />
        enemy_func = method(_inst, enemy_ai);<br />
    }</p>
  <p>上記のコードでは、マウスの位置に敵のインスタンスが存在するかどうかをチェックします。もし存在すれば、<span class="inline2">enemy_ai</span>メソッドが敵のインスタンスにバインドされ、新しいメソッド変数として返される <span class="inline">&quot;enemy_func&quot;</span> 。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="Variable_Functions.htm">バリアブルファンクション</a></div>
        <div style="float:right">次のページ <a href="method_get_self.htm"><span class="notranslate">method_get_self</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
method
-->
  <!-- TAGS
method
-->
</body>
</html>