<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>mp_grid_path</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="This page outlines the function mp_grid_path" />
  <meta name="rh-index-keywords" content="mp_grid_path" />
  <meta name="search-keywords" content="mp_grid_path" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>mp_grid_path</h1>
  <p>この関数を使うと、あらかじめ定義しておいた <span class="inline">mp_grid</span> を使って、スタート地点からゴール地点まで、すでにグリッドに追加されている障害物を避けながら移動する<span class="notranslate">path</span> を作成することができる。xstart と ystart 引数は<span class="notranslate">path</span> の開始点を<span class="notranslate">room</span> 座標で示し、xgoal と ygoal 引数は目的地を示します。また、allowdiag 引数に true を指定することで、水平/垂直方向の移動のみか、完全な斜め方向の移動を許可するか、どちらかを選択できます。この関数は，真（<span class="notranslate">path</span> を見つけることに成功した）か偽（失敗した）を返すとともに，選んだ<span class="notranslate">path</span> をセットします．次の図では，この関数がどのように動作しているかがわかります．</p>
  <p><img>ご覧のように、「パイプ」<span class="notranslate">objects</span> がグリッドに追加されています。つまり、作成された<span class="notranslate">path</span> は、これを回り込まなければならないのです。この画像では、2つの<span class="notranslate">paths</span> が作成されています。1つ（緑）は対角線を許可したもので、もう1つ（赤）は許可していないものです。この2つの違いは明らかで、緑の<span class="notranslate">path</span> はより「エレガント」で直接的な印象を与えますが、どのような用途に使うかによって、どちらがいいかは変わってきます。<span class="notranslate">path</span> は現在のインスタンスとは無関係です。特定のインスタンスが<span class="notranslate">path</span> のインデックスを格納する変数を持っていたとしても、それは特定のインスタンスの<span class="notranslate">path</span> ではなく、グリッド全体の<span class="notranslate">path</span> であることに注意してください。また、これらの<span class="notranslate">paths</span> がどのように作成され、ゲーム環境内でどのように作用するかを確認するためにデバッグする必要があるかもしれません。その場合、 <span class="inline"><a href="../../Drawing/Basic_Forms/draw_path.htm">draw_path()</a></span> 関数を使用する必要があります。</p>
  <p class="note"><b>注：</b> <span class="notranslate">path</span> は以前に作成されている必要があります（コード内で <span style="font-size:1px;"><a href="../../Asset_Management/Paths/Path_Manipulation/path_add.htm"><span class="inline">path_add()</span></a></span>またはリソースとして）、この関数で生成された<span class="notranslate">path</span> に置き換えられます。</p>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">mp_grid_path(id, path, xstart, ystart, xgoal, ygoal, allowdiag);</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th>
        <th>タイプ</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate">id</span></td>
        <td><span data-keyref="Type_ID_MP_Grid">MP Grid ID</span></td>
        <td><span class="notranslate">Index of the mp_grid that is to be used</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">path</span></td>
        <td><span data-keyref="Type_Asset_Path">パスアセット</span></td>
        <td><span class="notranslate">index of the path that is to be used by the function</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xstart</span></td>
        <td><span data-keyref="Type_Real">リアル</span></td>
        <td><span class="notranslate">Starting x coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ystart</span></td>
        <td><span data-keyref="Type_Real">リアル</span></td>
        <td><span class="notranslate">Starting y coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xgoal</span></td>
        <td><span data-keyref="Type_Real">リアル</span></td>
        <td><span class="notranslate">Finishing x coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ygoal</span></td>
        <td><span data-keyref="Type_Real">リアル</span></td>
        <td><span class="notranslate">Finishing y coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">allowdiag</span></td>
        <td><span data-keyref="Type_Bool">ブーリアン</span></td>
        <td><span class="notranslate">Indicates whether diagonal moves are allowed instead of just horizontal or vertical</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Bool">Boolean</span></p>
  <p> </p>
  <h4>例</h4>
  <p class="code">global.grid = mp_grid_create(0, 0, room_width div 32, room_height div 32, 32, 32);<br />
    mp_grid_add_instances(global.grid, obj_wall, false);<br />
    with (obj_Enemy)<br />
    {<br />
        path = path_add();<br />
        if mp_grid_path(global.grid, path, x, y, obj_Player.x, obj_Player.y, 1)<br />
        {<br />
            path_start(path, 0, 3, 0);<br />
        }<br />
    }</p>
  <p>上記のコードはグローバル変数 &quot;global.grid&quot; を作成し、mp_grid を生成してそのインデックス (id) を変数に代入し、以降のすべての mp_grid 関数呼び出しに使用します。そして、&quot;obj_Wall&quot; のインスタンスをグリッドに追加してから &quot;obj_Enemy&quot; のインスタンスをすべて取得して<span class="notranslate">path</span> を作成し、 <span class="inline">mp_grid_path</span> を使ってそれらの位置から &quot;obj_Player&quot; の位置までの経路を計算します。もしルートが存在すれば、<span class="notranslate">object</span> は<span class="notranslate">path</span> に沿って自分自身をスタートさせます。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="Motion_Planning.htm">モーションプランニング</a></div>
        <div style="float:right">次のページ <a href="mp_grid_add_cell.htm"><span class="notranslate">mp_grid_add_cell</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
mp_grid_path
-->
  <!-- TAGS
mp_grid_path
-->
</body>
</html>