<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>レイヤースクリプトベギン</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function layer_script_begin" />
  <meta name="rh-index-keywords" content="layer_script_begin" />
  <meta name="search-keywords" content="layer_script_begin" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>レイヤースクリプトベギン</h1>
  <p>この関数を使うと、レイヤーに<a href="../../../../GML_Overview/Script_Functions.htm">スクリプト関数を</a>割り当てることができ、レイヤーがレンダリングされる前に呼び出されるようになります。レイヤーに関数を追加する場合、この方法では<i>さまざまな描画イベントの</i>開始時に実行されます。したがって、割り当てられた関数で現在どのイベントが描画されているかを確認し、コードを適合させたい場合があります。これは <a href="../../Objects/Object_Events/event_type.htm"><span class="inline">event_type</span></a>または <a href="../../Objects/Object_Events/event_number.htm"><span class="inline">event_number</span></a>(下記の拡張例参照)。この関数は、描画イベントやステップイベントで呼び出される<i>のではなく</i>、<strong>ルーム作成コード</strong>またはインスタンスの<strong>作成イベント/ </strong> <strong>ルーム開始</strong>イベントの<span class="notranslate">room</span> の開始時にのみ呼び出される必要があることに注意してください。</p>
  <p> </p>
  <h4>構文です。</h4>
  <p class="code">layer_script_begin(layer_id, script);</p>
  <table>
    <tbody>
      <tr>
        <th>論証</th>
        <th>タイプ</th>
        <th>商品説明</th>
      </tr>
      <tr>
        <td><span class="notranslate">layer_id</span></td>
        <td><span data-keyref="Type_String">文字列</span>または<span data-keyref="Type_ID_Layer">レイヤID</span></td>
        <td><span class="notranslate">The unique ID value of the layer to target (or the layer name as a string)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">script</span></td>
        <td><span data-keyref="Type_Function_Script">スクリプト機能</span></td>
        <td><span class="notranslate">The script function index to assign to the layer</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>リターンです。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>拡張された例。</h4>
  <p>この拡張例では、まず、単純な<span class="notranslate">script</span> 関数が、与えられたレイヤーが描画されたときにこの関数が実行されて<span class="notranslate">shader</span> が正しく動作するように、いくつかの<span class="notranslate">shader</span> ユニフォームデータを設定する構造になっていることを紹介します。この例では、どのイベントが呼び出されているかをチェックし、残りの関数が必要な特定のイベント (この場合はメインの描画イベント) でのみ実行されるようにしていることに注目しましょう。</p>
  <p class="code">/// @function layer_shader_start();<br />
    function layer_shader_start()<br />
    {<br />
        if event_type == ev_draw<br />
        {<br />
            if event_number == 0<br />
            {<br />
                colour_to_find = shader_get_uniform(sShaderDemo5, &quot;f_Colour1&quot;);<br />
                colour_to_set = shader_get_uniform(sShaderDemo5, &quot;f_Colour2&quot;);<br />
                shader_set(s_ColourChanger);<br />
                shader_set_uniform_f(colour_to_find, 1,1,1 );<br />
                shader_set_uniform_f(colour_to_set, 1,0,0 );<br />
            }<br />
        }<br />
    }</p>
  <p>そして、すべての描画が終わった後に、<span class="notranslate">shader</span> をリセットするコンパニオン関数を用意するのです。</p>
  <p class="code">/// @function layer_shader_end();<br />
    function layer_shader_end()<br />
    {<br />
        if event_type == ev_draw<br />
        {<br />
            if event_number == 0<br />
            {<br />
                shader_reset();<br />
            }<br />
        }<br />
    }</p>
  <p><span class="notranslate">script</span> を設定するための<span class="notranslate">shader</span> 関数を定義したので、次にそれらを特定のレイヤーに割り当てて、レイヤーがそれらを呼び出すことを知るようにしなければなりません。これは、<span class="notranslate">room</span> の作成コード、または、コントローラ<span class="notranslate">room</span> の create イベントや<span class="notranslate">object</span> start イベントで行います（ステップごとに設定する必要はなく、<span class="notranslate">room</span> の開始時、またはレイヤが最初に作成されたときに一度だけ設定する必要があります）。</p>
  <p class="code">var lay_id = layer_get_id(&quot;Instances&quot;);<br />
    layer_script_begin(lay_id, layer_shader_start);<br />
    layer_script_end(lay_id, layer_shader_end);</p>
  <p>この最後のコードブロックは、<span class="notranslate">scripts</span> をレイヤーに割り当てます。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る<a href="General_Layer_Functions.htm">一般的なレイヤーの機能</a></div>
        <div style="float:right">次のページ <a href="layer_script_end.htm"><span class="notranslate">layer_script_end</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
layer_script_begin
-->
  <!-- TAGS
layer_script_begin
-->
</body>
</html>